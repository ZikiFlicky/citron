Broom memoryLimit: 1024 * 1024 * 128.

rept is 1000.

ptr is CTypes pointer.
int is CTypes sint.
cif is CIF new setABI: 0 return: Nil argTypes: [].
ll is CTypes loadLibrary: '/lib64/libpython3.so'.
pyinit is ll Py_Initialize.
pyfinalize is ll Py_Finalize.
pyrun is ll PyRun_SimpleString.

cif call: pyinit withArgs: [].
cif setABI: 0 return: Nil argTypes: [ptr].
ptime is 0.
pbest is 10 toPowerOf: 10.
rept times: {:i
  ptr destruct.
  ptr is 'len( "    " * $$i )'.
  ptime +=: (var bestc is (Clock timeExecutionOf: {
      cif call: pyrun withArgs: [ptr].
  })).
  pbest is pbest min: bestc.
}.

cif setABI: 0 return: Nil argTypes: [].
cif call: pyfinalize withArgs: [].

Broom sweep.

ll is CTypes loadLibrary: Nil.
ptr is ''.
cif setABI: 0 return: Nil argTypes: [ptr].
execstr is ll execute_string.

rtime is 0.
rbest is 10 toPowerOf: 10.
rept times:{:i
  ptr is '\'    \' * $$i length'.
  rtime +=: (var bestc is (Clock timeExecutionOf: {
        cif call: execstr withArgs: [ptr].
  })).
  rbest is rbest min: bestc.
}.


Pen write: 'Python statistics:
    ran command: len( "    " * i ),
    total time: %d,
    best time: %d,
    average over $$rept : %d
Citron statistics:
    ran command: \'    \' * i length,
    total time: %d,
    best time: %d,
    average over $$rept : %d
' % [ptime, pbest, (ptime / rept), rtime, rbest, (rtime / rept)], brk.
