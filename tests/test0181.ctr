#String operations should not leak memory

usedMemory1 := 0.
usedMemory2 := 0.
usedMemory3 := 0.
usedMemory4 := 0.

Broom mode: 0.

txt := 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt := txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.

usedMemory1 := Broom keptAlloc.
#Pen write: usedMemory1, brk.

txt := 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt := txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.
usedMemory2 := Broom keptAlloc.
#Pen write: usedMemory2, brk.

txt := 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt := txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.
usedMemory3 := Broom keptAlloc.
#Pen write: usedMemory3, brk.

#memory counters need to be equal!
( usedMemory1 = usedMemory2 and: usedMemory1 = usedMemory3, and: usedMemory2 = usedMemory3 ) ifTrue: {
	Pen write: 'No memory leaks here'.
}, ifFalse: {
	Pen write: 'Leaking memory...'.
}.
