
# Source Code Extracted API/Manual
# --------------------------------
# API documentation generation script
# generates man-style documentation
# written by AnotherTest

# Start: ctr sman.ctr > ctr.1 ;mandoc -O style=ctrstyle.css -Thtml ctr.1 > docs.html ;mandoc -a ctr.1

Broom memoryLimit: 1024 * 1024 * 128.

?>
.\" Manpage for ctr.
.TH man 1 <?.
Pen write: ('"%s" "%s"' formatObjects: [(Clock new format: '%d %B %Y'), (Reflect version)]).
?> "CTR man page"
.SH NAME
ctr \- run a Citron program
.PP
citron \- interface to citron eval
.SH SYNOPSIS
ctr [PROGRAM]
.PP
citron [arguments]
.SH DESCRIPTION
Citron is general purpose programming language for UNIX\-like operating systems.
.SH REFERENCE MANUAL
Citron has 5 literals:
.RS 4
.br
- Nil
.br
- Booleans (True, False)
.br
- Numbers (1, -2, 3.5)
.br
- Strings 'All Strings are UTF8!'
.br
- Code Blocks { parameters code }
.br

.RE
The following messages are part of the Core API of the Citron Programming Language:
.br
.PP
.SS
<?.

['../base.c', '../collections.c', '../file.c', '../system.c', '../reflect.c', '../fiber.c'] fmap: {:v
	var f is File new: v.
	var str is f read.
	f close.
	str findPattern: '(?s)/\\*\\*(.*?)\\*/' do: {:p
		(p at: 0, contains: '@internal') ifFalse: {
			Pen write: '.B '.
			Pen write: (p at: 1, split: '\n', fmap: {:s ^s skip: 2.}, join: '\n', trim), brk.
			Pen write: '.BR' + ('\n\n.PP\n.SS'), brk.
		}.
	}.
}.

?>
.SH BUGS
This is a preliminary version (< 1.0) of Citron, there might still be very serious bugs.
Please refrain from using this version in a production environment. This version of Citron
is still considered 'alpha' stage and cannot be expected to be reliable.

.SH AUTHOR
AnotherTest and the Citron Community (Nil)
.PP
devanothertest@gmail.com
