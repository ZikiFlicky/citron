Broom memoryLimit: 1024 * 1024 * 512.
Broom autoAlloc: True.

import Library/Data/SwitchCase.

var w is 640.
var h is 480.
var window is SDL new set: 'windowWidth' to: w, set: 'windowHeight' to: h, init.
var c is Color rgb: [0,0,0].
var evt is SDLEvent new.
var in_boop is False.
var evthandler is {:e
  (SDLEventTypes at: e toNumber)
      case: 'keyDown' do: {
     (var ks is e keysym)
        case: 'q' do: {
          Program exit.
      },case: 'c' do: {
        in_boop is in_boop not.
        in_boop ifTrue: {
          Pen writeln: 'boop'.
          duck is SDL loadImage: 'examples/sdl/boop.jpg'.
        }, else: {
          Pen writeln: 'duck'.
          duck is SDL loadImage: 'examples/sdl/lol.bmp'.
        }.
        duck scaleToW: w / 2 andH: h.
        duck_rect is duck clipRect.
        dc is duck pixelAtX: 0 andY: 0.
        duck setColorKey: dc.
      }, switch.
   }, case: 'quit' do: {
     Program exit.
   }, switch.
}.
var duck is SDL loadImage: 'examples/sdl/lol.bmp'.
duck scaleToW: w / 2 andH: h.
var dc is duck pixelAtX: 0 andY: 0.
duck setColorKey: dc.
var duck_rect is duck clipRect.
var r is SDL newRectWithX: 0 andY: 0 andW: 0 andH: 0.
var x is w.
var white is Color rgb: [256,256,255]. #Totally white
{\ True } whileTrue: {
  r setX: x abs.
  window blit: duck fromRect: duck_rect toRect: r.
  window update.
  evt poll: evthandler.
  Clock wait: 5 ms. #magic 60fps time weee
  window fillRect: Nil withColor: white.
  x is x -=: 1.
  (x equals: 0 - w) ifTrue: {x is w.}.
}.
