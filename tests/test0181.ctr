#String operations should not leak memory

usedMemory1 is 0.
usedMemory2 is 0.
usedMemory3 is 0.
usedMemory4 is 0.

Broom mode: 0.

txt is 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt is txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.

usedMemory1 is Broom keptAlloc.
#Pen write: usedMemory1, brk.

txt is 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt is txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.
usedMemory2 is Broom keptAlloc.
#Pen write: usedMemory2, brk.

txt is 'World Salad'.
Pen write: 'this text contains: ' + ( ( txt split: ' ' ) count ) + ' words.', brk.
txt is txt from: 6 to: 10.
Pen write: txt, brk.

Broom sweep.
usedMemory3 is Broom keptAlloc.
#Pen write: usedMemory3, brk.

#memory counters need to be equal!
( (usedMemory1 = usedMemory2) & (usedMemory1 = usedMemory3) & (usedMemory2 = usedMemory3) ) ifTrue: {
	'No memory leaks here'.
}, ifFalse: {
	'Leaking memory...'.
}.
