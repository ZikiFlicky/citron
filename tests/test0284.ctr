ptr is CTypes fromString: 'print("test" * 10)'.
int is CTypes sint.
cif is CIF new setABI: 0 return: Nil argTypes: [].
ll is CTypes loadLibrary: '/lib64/libpython3.so'.
pyinit is ll Py_Initialize.
pyfinalize is ll Py_Finalize.
pyrun is ll PyRun_SimpleString.

cif call: pyinit withArgs: [].
cif setABI: 0 return: Nil argTypes: [ptr].

ptime is 0.
pbest is 10 toPowerOf: 10.
50 times: {
  ptime +=: (var bestc is (Clock timeExecutionOf: {
      cif call: pyrun withArgs: [ptr].
  })).
  pbest is pbest min: bestc.
}.

cif setABI: 0 return: Nil argTypes: [].
cif call: pyfinalize withArgs: [].

pyrun desstruct.
pyinit destruct.
pyfinalize destruct.
ll destruct.
ptr destruct.

ll is CTypes loadLibrary: Nil.
ptr is CTypes fromString: 'Pen write: (\'test \' * 10), brk'.
cif setABI: 0 return: Nil argTypes: [ptr].
execstr is ll execute_string.

rtime is 0.
rbest is 10 toPowerOf: 10.
50 times:{
  rtime +=: (var bestc is (Clock timeExecutionOf: {
        cif call: execstr withArgs: [ptr].
  })).
  rbest is rbest min: bestc.
}.

cif destruct.
ptr destruct.
ll destruct.

Pen write: ('Python statistics:
    total time: %d,
    best time: %d,
    average over 50: %d
Citron statistics:
    total time: %d,
    best time: %d,
    average over 50: %d
' formatObjects: [ptime, pbest, (ptime / 50), rtime, rbest, (rtime / 50)]), brk.
