#Test the Citron equivalent of 'closures'

makeAdder is { :x
	var f is { :y ^ (my x + y). } set: 'x' value: x. 
	^ f.
}.

mapper is { :array :func
	var mapping is { :i my q put: (my f applyTo: (my q @ i)) at: i. } 
	set: 'q' value: array,
	set: 'f' value: func.
	(array count) times: { :i mapping applyTo: i. }.
}.

a is Array < 1; 2; 3.
mapper applyTo: a and: (makeAdder applyTo: 100).
Pen write: (a at: 0), brk.
Pen write: (a at: 1), brk.
Pen write: (a at: 2), brk.
