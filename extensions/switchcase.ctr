#Reflect addGlobalVariable: 'IntermediateCaseObject'.
var CaseConstruct is Object new.
CaseConstruct on: 'initFor:' do: {:obj
  my obj is obj.
  my casemap is Map new.
  my default is Nil.
}.
CaseConstruct on: 'case:do:' do: {:s:b
  my casemap put: b at: s.
}.
CaseConstruct on: 'default:' do: {:b my default is b.}.
CaseConstruct on: 'switch:' do: {:value
  var ans is my casemap at: value.
  var default is my default.
  ^ans isNil either: {^default run.} or: {^ans run.}.
}.
CaseConstruct on: 'switch' do: {
  var ans is my casemap at: my obj.
  var default is my default.
  ^ans isNil either: {^default run.} or: {^ans run.}.
}.
Object on: 'case:do:' do: { :s :b
  var ret is const CaseConstruct new initFor: me.
  ^ret case: s do: b.
}.
