#System operations (Clock, Dice, Pen, Shell, Program) should not leak memory.

usedMemory1 := 0.
usedMemory2 := 0.
usedMemory3 := 0.
usedMemory4 := 0.

Broom mode: 0.

Clock time.
Clock wait: 1.
Pen write: Program argCount, brk.
Program argument: 0.
Dice roll.
Dice rollWithSides: 10.
Dice rawRandomNumber.
Pen write: (Shell echo: 'Hello').

Broom sweep.

usedMemory1 := Broom keptAlloc.
#Pen write: usedMemory1, brk.

Clock time.
Clock wait: 1.
Pen write: Program argCount, brk.
Program argument: 0.
Dice roll.
Dice rollWithSides: 10.
Dice rawRandomNumber.
Pen write: (Shell echo: 'Hello').


Broom sweep.
usedMemory2 := Broom keptAlloc.
#Pen write: usedMemory2, brk.

Clock time.
Clock wait: 1.
Pen write: Program argCount, brk.
Program argument: 0.
Dice roll.
Dice rollWithSides: 10.
Dice rawRandomNumber.
Pen write: (Shell echo: 'Hello').

Broom sweep.
usedMemory3 := Broom keptAlloc.
#Pen write: usedMemory3, brk.

#memory counters need to be equal!
( usedMemory1 = usedMemory2 and: usedMemory1 = usedMemory3, and: usedMemory2 = usedMemory3 ) ifTrue: {
	Pen write: 'No memory leaks here'.
}, ifFalse: {
	Pen write: 'Leaking memory...'.
}.
