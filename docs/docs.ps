%!PS-Adobe-3.0
%%Creator: groff version 1.22.3
%%CreationDate: Mon Dec 11 01:01:29 2017
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%DocumentSuppliedResources: procset grops 1.22 3
%%Pages: 45
%%PageOrder: Ascend
%%DocumentMedia: Default 595 842 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 3
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 595 842 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 841.89 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron
/Zcaron/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(1)535 768 Q 0 Cg EP
%%Page: 1 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E
F0(ctr \255 run a Citron program)108 96 Q(citron \255 interf)108 112.8 Q
(ace to citron e)-.1 E -.25(va)-.25 G(l).25 E F1(SYNOPSIS)72 129.6 Q F0
(ctr [PR)108 141.6 Q(OGRAM])-.4 E(citron [ar)108 158.4 Q(guments])-.18 E
F1(DESCRIPTION)72 175.2 Q F0
(Citron is a general purpose programming language for UNIX\255lik)108
187.2 Q 2.5(eo)-.1 G(perating systems.)-2.5 E F1(REFERENCE MANU)72 204 Q
(AL)-.657 E F0(Citron has 5 literals:)108 216 Q 2.5(-N)128 228 S(il)-2.5
E 2.5(-B)128 240 S(ooleans \(T)-2.5 E(rue, F)-.35 E(alse\))-.15 E 2.5
(-N)128 252 S(umbers \(1, -2, 3.5\))-2.5 E 2.5(-S)128 264 S
(trings 'All Strings are UTF8!')-2.5 E 2.5(-C)128 276 S
(ode Blocks { parameters code })-2.5 E(The follo)108 300 Q(wing message\
s are part of the Core API of the Citron Programming Language:)-.25 E F1
(Nil)110.738 328.8 Q/F2 10/Times-Bold@0 SF(_OBJ_DEF Nil)108 340.8 Q(Nil)
87 369.6 Q F0(Nil represents 'nothing' or NULL in other languages.)110.5
381.6 Q(An)110.5 393.6 Q 2.5(yo)-.15 G
(bject property that has not been assigned a v)-2.5 E(alue)-.25 E
(will contain Nil. Unlik)110.5 405.6 Q 2.5(es)-.1 G
(ome other programming languages)-2.5 E
(Citron has no concept of 'unde\214ned' or isset, Nil is actually the)
110.5 417.6 Q(same as 'unde\214ned' or not set.)110.5 429.6 Q(Literal:)
110.5 453.6 Q(Nil)110.5 477.6 Q F2([Nil] isNil)87 506.4 Q F0(Nil al)
110.5 518.4 Q -.1(wa)-.1 G
(ys answers this message with a boolean object 'T).1 E(rue'.)-.35 E F2
([Nil] toString)87 547.2 Q F0
(Returns the string representation of Nil: 'Nil'.)110.5 559.2 Q F2
([Nil] toNumber)87 588 Q F0
(Returns the numerical representation of Nil: 0.)110.5 600 Q F2
([Nil] toBoolean)87 628.8 Q F0
(Returns the boolean representation of Nil: F)110.5 640.8 Q(alse.)-.15 E
F2([Nil] unpack: [Ref:string])87 669.6 Q F0(Assigns Nil into Ref)110.5
681.6 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(1)190.955 E 0 Cg
EP
%%Page: 2 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10.95/Times-Bold@0 SF(Object)110.738 96 Q/F2 10
/Times-Bold@0 SF(_OBJ_DEF Object)108 108 Q(Object)87 136.8 Q F0
(This is the base object, the parent of all other objects.)110.5 148.8 Q
(It contains essential object oriented programming features.)110.5 160.8
Q F2(Object cnew: [Block])87 189.6 Q F0
(Object constructor with some initial parameters.)110.5 201.6 Q
(Object is passed to the block as me/my)110.5 213.6 Q F2
(Object genAccessors: [String])87 242.4 Q F0
(generate reader/writer methods for property)110.5 254.4 Q(.)-.65 E
(creates the property is it doesn')110.5 266.4 Q 2.5(te)-.18 G(xist)
-2.65 E F2(Object genReader: [String])87 295.2 Q F0
(generate reader method for property)110.5 307.2 Q(.)-.65 E
(creates the property is it doesn')110.5 319.2 Q 2.5(te)-.18 G(xist)
-2.65 E F2(Object genWriter: [String])87 348 Q F0
(generate writer method for property)110.5 360 Q(.)-.65 E
(does not create the property is it doesn')110.5 372 Q 2.5(te)-.18 G
(xist)-2.65 E F2([Object] unpack: [Object:{Ref*}])87 400.8 Q F0
(Element-wise object assign)110.5 412.8 Q F2([Object] iHash)87 441.6 Q
F0 -.1(fa)110.5 453.6 S(llback hashing).1 E
(returns the hash of the object')110.5 465.6 Q 2.5(ss)-.55 G
(tring form.)-2.5 E F2([Object] new hiding:)87 494.4 Q F0(Creates a ne)
110.5 506.4 Q 2.5(wO)-.25 G(bject hiding some parameters.)-2.5 E F2
(Object swapRefs: [Object])87 535.2 Q F0(sw)110.5 547.2 Q(ap tw)-.1 E
2.5(oo)-.1 G(bjects with each other)-2.5 E(.)-.55 E(Ef)110.5 559.2 Q
(fecti)-.25 E -.15(ve)-.25 G(ly 'xchg %ra, %rb').15 E F2([Object] type)
87 588 Q F0(Returns a string representation of the type of object.)110.5
600 Q F2([Object] toString)87 628.8 Q F0
(Returns a string representation of a generic object.)110.5 640.8 Q
(This string representation will be:)110.5 652.8 Q([Object])110.5 676.8
Q F2([Object] toNumber)87 705.6 Q F0
(Returns a numerical representation of the object. This basic beha)110.5
717.6 Q(vior)-.2 E 2.5(,p)-.4 G(art)-2.5 E(of an)110.5 729.6 Q 2.5(yo)
-.15 G(bject will just return 1. Other objects typically o)-2.5 E -.15
(ve)-.15 G(rride this).15 E 165.955(0.0.6.6 10)72 768 R(December 2017)
2.5 E(2)190.955 E 0 Cg EP
%%Page: 3 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(beha)110.5 84 Q
(vior with more useful implementations.)-.2 E/F1 10/Times-Bold@0 SF
([Object] toBoolean)87 112.8 Q F0
(Returns a boolean representation of the object. This basic beha)110.5
124.8 Q(vior)-.2 E 2.5(,p)-.4 G(art)-2.5 E(of an)110.5 136.8 Q 2.5(yo)
-.15 G(bject will just return T)-2.5 E(rue. Other objects typically o)
-.35 E -.15(ve)-.15 G(rride this).15 E(beha)110.5 148.8 Q
(vior with more useful implementations.)-.2 E F1
([Object] equals: [other])87 177.6 Q F0 -.7(Te)110.5 189.6 S
(sts whether the current instance is the same as).7 E(the ar)110.5 201.6
Q(gument.)-.18 E(Alias: =)110.5 225.6 Q(Usage:)110.5 249.6 Q
(object equals: other)110.5 261.6 Q F1([Object] id)87 290.4 Q F0
(returns a unique identi\214er for the object)110.5 302.4 Q F1
([Object] myself)87 331.2 Q F0(Returns the object itself.)110.5 343.2 Q
F1([Object] lear)87 372 Q(n: [String] means: [String].)-.15 E F0 -.7(Te)
110.5 384 S(aches an).7 E 2.5(yo)-.15 G
(bject to repsond to the \214rst speci\214ed message just lik)-2.5 E(e)
-.1 E(it w)110.5 396 Q(ould upon recei)-.1 E(ving the second. This allo)
-.25 E(ws you to map e)-.25 E(xisting)-.15 E(responses to ne)110.5 408 Q
2.5(wm)-.25 G(essages. Y)-2.5 E
(ou can use this to translate messages into your nati)-1.1 E -.15(ve)
-.25 G
(language. After mapping, sending the alias message will be just as f)
110.5 420 Q(ast)-.1 E(as sending the original message. Y)110.5 432 Q
(ou can use this to create programs)-1.1 E(in your nati)110.5 444 Q .3
-.15(ve l)-.25 H
(anguage without sacr\214cing performance. Of course the mapping itself)
.15 E(has a cost, b)110.5 456 Q(ut the mapped calls will be ')-.2 E
(toll-free'.)-.18 E(Usage:)110.5 480 Q(#in this e)110.5 504 Q
(xample we')-.15 E(ll map a message to a Dutch w)-.1 E(ord:)-.1 E
(Boolean learn: 'alsW)110.5 528 Q(aar:')-.8 E(means: 'ifT)130.5 540 Q
(rue:'.)-.35 E(\(2 > 1\) alsW)110.5 564 Q(aar: {)-.8 E(Pen write: 'alsW)
115.5 576 Q(aar means ifT)-.8 E(rue in Dutch'.)-.35 E(})110.5 588 Q F1
([Object] do)87 616.8 Q F0(Acti)110.5 628.8 Q -.25(va)-.25 G
(tes 'chain mode'. If chain mode is acti).25 E -.15(ve)-.25 G 2.5(,a).15
G(ll messages will)-2.5 E(return the recipient object re)110.5 640.8 Q
-.05(ga)-.15 G(rdless of their return signature.).05 E(Usage:)110.5
664.8 Q 2.5(a:)110.5 688.8 S 2.5(=A)-2.5 G(rray < 'hello' ; 'w)-2.5 E
(orld' ; T)-.1 E(rue ; Nil ; 666.)-.35 E 2.5(ad)110.5 700.8 S 2.5(op)
-2.5 G(op shift unshift: 'hi', push: 999, done.)-2.5 E
(Because of 'chain mode' you can do 'a do pop shift' etc, instead of)
110.5 724.8 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(3)190.955
E 0 Cg EP
%%Page: 4 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E 2.5(ap)110.5 84 S(op.)-2.5 E 2.5(as)110.5 96 S
(hift.)-2.5 E(etc..)110.5 108 Q(The ')110.5 132 Q
(do' message tells the object to al)-.5 E -.1(wa)-.1 G
(ys return itself and disg).1 E(ard)-.05 E(the original return v)110.5
144 Q(alue until the message ')-.25 E(done' has been recei)-.5 E -.15
(ve)-.25 G(d.).15 E/F1 10/Times-Bold@0 SF([Object] done)87 172.8 Q F0
(Deacti)110.5 184.8 Q -.25(va)-.25 G(tes 'chain mode'.).25 E F1
([Object] message: [String] ar)87 213.6 Q(guments: [Array])-.1 E F0
(Sends a custom or ')110.5 225.6 Q
(dynamic' message to an object. This tak)-.5 E(es a string containing)
-.1 E(the message to be send to the object and an array listing the ar)
110.5 237.6 Q(guments at the)-.18 E(correct inde)110.5 249.6 Q -.15(xe)
-.15 G(s. If the array f).15 E(ails to pro)-.1 E(vide the correct inde)
-.15 E -.15(xe)-.15 G 2.5(st).15 G(his will)-2.5 E(generate an out-of-b\
ounds error coming from the Array object. If something other)110.5 261.6
Q(than an Array is pro)110.5 273.6 Q(vided an error will be thro)-.15 E
(wn as well.)-.25 E(Usage:)110.5 297.6 Q -.25(va)110.5 321.6 S 2.5(rs)
.25 G(tr := 'write:'.)-2.5 E(Pen message: 'write:' ar)110.5 333.6 Q
(guments: \(Array < 'Hello W)-.18 E(orld'\).)-.8 E
(This will print the string 'Hello w)110.5 357.6 Q
(orld' on the screen using a dynamically)-.1 E(crafted message.)110.5
369.6 Q F1([Object] on: [String] do: [Block])87 398.4 Q F0(Mak)110.5
410.4 Q(es the object respond to a ne)-.1 E 2.5(wk)-.25 G
(ind of message.)-2.5 E
(Use the semicolons to indicate the positions of the ar)110.5 422.4 Q
(guments to be)-.18 E(passed.)110.5 434.4 Q(Usage:)110.5 458.4 Q
(object on: 'greet' do: { ... }.)110.5 482.4 Q
(object on: 'between:and:' do: { ... }.)110.5 494.4 Q F1([Object] r)87
523.2 Q(espondT)-.18 E(o: [String])-.92 E F0 -1.11(Va)110.5 535.2 S
(riations:)1.11 E([Object] respondT)110.5 559.2 Q
(o: [String] with: [String])-.8 E([Object] respondT)110.5 571.2 Q
(o: [String] with: [String] and: [String])-.8 E(Def)110.5 595.2 Q
(ault respond-to implementation, does nothing.)-.1 E F1([Object] isNil)
87 624 Q F0(Def)110.5 636 Q(ault isNil implementation.)-.1 E(Al)110.5
660 Q -.1(wa)-.1 G(ys returns boolean object F).1 E(alse.)-.15 E/F2
10.95/Times-Bold@0 SF(Boolean)110.738 700.8 Q F1(_OBJ_DEF Boolean)108
712.8 Q F0 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(4)190.955 E 0
Cg EP
%%Page: 5 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF(Boolean)87 84 Q F0(Literal:)
110.5 96 Q -.35(Tr)110.5 120 S(ue).35 E -.15(Fa)110.5 132 S(lse).15 E F1
([Boolean] unpack: [String:Ref])87 160.8 Q F0(Assign ref to boolean)
110.5 172.8 Q F1([Boolean] = [other])87 201.6 Q F0 -.7(Te)110.5 213.6 S
(sts whether the other object \(as a boolean\) has the).7 E(same v)110.5
225.6 Q(alue \(boolean state T)-.25 E(rue or F)-.35 E
(alse\) as the current one.)-.15 E(Usage:)110.5 249.6 Q(\(T)110.5 273.6
Q(rue = F)-.35 E(alse\) ifF)-.15 E(alse: { Pen write: 'This is not T)
-.15 E(rue!'. }.)-.35 E F1([Boolean] != [other])87 302.4 Q F0 -.7(Te)
110.5 314.4 S(sts whether the other object \(as a boolean\) has the).7 E
(same v)110.5 326.4 Q(alue \(boolean state T)-.25 E(rue or F)-.35 E
(alse\) as the current one.)-.15 E(Usage:)110.5 350.4 Q(\(T)110.5 374.4
Q(rue != F)-.35 E(alse\) ifT)-.15 E(rue: { Pen write: 'This is not T)
-.35 E(rue!'. }.)-.35 E F1([Boolean] toString)87 403.2 Q F0
(Simple cast function.)110.5 415.2 Q F1([Boolean] br)87 444 Q(eak)-.18 E
F0(Breaks out of the current block and b)110.5 456 Q
(ubbles up to the parent block if)-.2 E(the v)110.5 468 Q
(alue of the recei)-.25 E -.15(ve)-.25 G 2.5(re).15 G(quals boolean T)
-2.5 E(rue.)-.35 E(Usage:)110.5 492 Q
(\(iteration > 10\) break. #breaks out of loop after 10 iterations)110.5
516 Q F1([Boolean] continue)87 544.8 Q F0(Skips the remainder of the cu\
rrent block in a loop, continues to the ne)110.5 556.8 Q(xt)-.15 E
(iteration.)110.5 568.8 Q(Usage:)110.5 592.8 Q
(\(iteration > 10\) continue.)110.5 616.8 Q F1([Boolean] ifT)87 645.6 Q
(rue: [block])-.74 E F0(Ex)110.5 657.6 Q
(ecutes a block of code if the v)-.15 E(alue of the boolean)-.25 E
(object is T)110.5 669.6 Q(rue.)-.35 E(Usage:)110.5 693.6 Q(\(some e)
110.5 705.6 Q(xpression\) ifT)-.15 E(rue: { ... }.)-.35 E -1.1(Yo)110.5
729.6 S 2.5(uc)1.1 G(an also use ifF)-2.5 E(alse and ifT)-.15 E
(rue with other objects because the)-.35 E 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(5)190.955 E 0 Cg EP
%%Page: 6 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(Object instance also responds to these messages.)
110.5 84 Q/F1 10/Times-Bold@0 SF([Boolean] ifF)87 112.8 Q(alse: [block])
-.25 E F0(Ex)110.5 124.8 Q(ecutes a block of code if the v)-.15 E
(alue of the boolean)-.25 E(object is T)110.5 136.8 Q(rue.)-.35 E
(Usage:)110.5 160.8 Q(\(some e)110.5 172.8 Q(xpression\) ifF)-.15 E
(alse: { ... }.)-.15 E -1.1(Yo)110.5 196.8 S 2.5(uc)1.1 G
(an also use ifF)-2.5 E(alse and ifT)-.15 E
(rue with other objects because the)-.35 E
(Object instance also responds to these messages.)110.5 208.8 Q F1
([b:Object] or: [Block|Object])87 237.6 Q F0(Ev)110.5 249.6 Q
(aluates and returns the block if b e)-.25 E -.25(va)-.25 G(luates to f)
.25 E(alse, else returns b)-.1 E F1([Boolean] not)87 278.4 Q F0
(Returns the opposite of the current v)110.5 290.4 Q(alue.)-.25 E
(Usage:)110.5 314.4 Q -.35(Tr)110.5 326.4 S(ue := F).35 E(alse not.)-.15
E F1([Boolean] \215ip)87 355.2 Q F0
('Flips a coin'. Returns a random boolean v)110.5 367.2 Q(alue T)-.25 E
(rue or F)-.35 E(alse.)-.15 E(Usage:)110.5 391.2 Q
(coinLandsOn := \(Boolean \215ip\).)110.5 403.2 Q F1
([Boolean] either: [this] or: [that])87 432 Q F0(Returns ar)110.5 444 Q
(gument #1 if boolean v)-.18 E(alue is T)-.25 E(rue and ar)-.35 E
(gument #2 otherwise.)-.18 E(If either object is a block, it will be e)
110.5 468 Q -.15(xe)-.15 G(cuted and its result returned if).15 E
(it is supposed to be returned.)110.5 480 Q(Usage:)110.5 504 Q
(Pen write: ')110.5 516 Q
(the coin lands on: ' + \(Boolean \215ip either: 'head' or: ')-.18 E
(tail'\).)-.18 E(Pen write: ')110.5 528 Q(the coin lands on: ' + \(Bool\
ean \215ip either: {^'head' * 10000.} or: ')-.18 E(tail'\).)-.18 E F1
([Boolean] & [other])87 556.8 Q F0(Returns T)110.5 568.8 Q
(rue if both the object v)-.35 E(alue is T)-.25 E(rue and the)-.35 E(ar)
110.5 580.8 Q(gument is T)-.18 E(rue as well.)-.35 E(Usage:)110.5 604.8
Q 2.5(a&b)110.5 628.8 S F1([Boolean] ! [other])87 657.6 Q F0(Returns T)
110.5 669.6 Q(rue if the object v)-.35 E(alue is F)-.25 E(alse and the)
-.15 E(ar)110.5 681.6 Q(gument is F)-.18 E(alse as well.)-.15 E(Usage:)
110.5 705.6 Q 2.5(a!b)110.5 729.6 S 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(6)190.955 E 0 Cg EP
%%Page: 7 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Boolean] | [other])87 84 Q F0
(Returns T)110.5 96 Q(rue if either the object v)-.35 E(alue is T)-.25 E
(rue or the)-.35 E(ar)110.5 108 Q(gument is T)-.18 E(rue or both are T)
-.35 E(rue.)-.35 E(Usage:)110.5 132 Q 2.5(a|b)110.5 156 S F1
([Boolean] ? [other])87 184.8 Q F0(Returns T)110.5 196.8 Q
(rue if either the object v)-.35 E(alue is T)-.25 E(rue or the)-.35 E
(ar)110.5 208.8 Q(gument is T)-.18 E(rue b)-.35 E(ut not both.)-.2 E
(Usage:)110.5 232.8 Q 2.5(a?b)110.5 256.8 S F1([Boolean] toNumber)87
285.6 Q F0(Returns 0 if boolean is F)110.5 297.6 Q
(alse and 1 otherwise.)-.15 E/F2 10.95/Times-Bold@0 SF(Number)110.738
338.4 Q F1(_OBJ_DEF Number)108 350.4 Q(Number)87 379.2 Q F0(Literal:)
110.5 391.2 Q(0)110.5 415.2 Q(1)110.5 427.2 Q(-8)110.5 439.2 Q(2.5)110.5
451.2 Q(Represents a number object in Citron.)110.5 475.2 Q F1
([Number] unpack: [String:Ref])87 504 Q F0(Assign ref to number)110.5
516 Q F1([Number] > [other])87 544.8 Q F0(Returns T)110.5 556.8 Q
(rue if the number is higher than other number)-.35 E(.)-.55 E F1
([Number] >=: [other])87 585.6 Q F0(Returns T)110.5 597.6 Q
(rue if the number is higher than or equal to other number)-.35 E(.)-.55
E F1([Number] < [other])87 626.4 Q F0(Returns T)110.5 638.4 Q
(rue if the number is less than other number)-.35 E(.)-.55 E F1
([Number] <=: [other])87 667.2 Q F0(Returns T)110.5 679.2 Q
(rue if the number is less than or equal to other number)-.35 E(.)-.55 E
165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(7)190.955 E 0 Cg EP
%%Page: 8 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Number] = [other])87 84 Q F0
(Returns T)110.5 96 Q(rue if the number equals the other number)-.35 E
(.)-.55 E F1([Number] !=: [other])87 124.8 Q F0(Returns T)110.5 136.8 Q
(rue if the number does not equal the other number)-.35 E(.)-.55 E F1
([Number] between: [lo)87 165.6 Q(w] and: [high])-.1 E F0(Returns T)
110.5 177.6 Q(rue if the number instance has a v)-.35 E
(alue between the tw)-.25 E(o)-.1 E(speci\214ed v)110.5 189.6 Q(alues.)
-.25 E(Usage:)110.5 213.6 Q 2.5(qb)110.5 237.6 S(etween: x and: y)-2.5 E
F1([Number] odd)87 266.4 Q F0(Returns T)110.5 278.4 Q
(rue if the number is odd and F)-.35 E(alse otherwise.)-.15 E F1
([Number] e)87 307.2 Q -.1(ve)-.15 G(n).1 E F0(Returns T)110.5 319.2 Q
(rue if the number is e)-.35 E -.15(ve)-.25 G 2.5(na).15 G(nd F)-2.5 E
(alse otherwise.)-.15 E F1([Number] + [Number])87 348 Q F0
(Adds the other number to the current one. Returns a ne)110.5 360 Q(w)
-.25 E(number object.)110.5 372 Q F1([Number] +=: [Number])87 400.8 Q F0
(Increases the number ITSELF by the speci\214ed amount, this message wi\
ll change the)110.5 412.8 Q -.25(va)110.5 424.8 S
(lue of the number object itself instead of returning a ne).25 E 2.5(wn)
-.25 G(umber)-2.5 E(.)-.55 E F1([Number] - [Number])87 453.6 Q F0
(Subtracts the other number from the current one. Returns a ne)110.5
465.6 Q(w)-.25 E(number object.)110.5 477.6 Q F1([Number] -=: [number])
87 506.4 Q F0(Decreases the number ITSELF by the speci\214ed amount, th\
is message will change the)110.5 518.4 Q -.25(va)110.5 530.4 S
(lue of the number object itself instead of returning a ne).25 E 2.5(wn)
-.25 G(umber)-2.5 E(.)-.55 E F1([Number] * [Number or Block])87 559.2 Q
F0(Multiplies the number by the speci\214ed multiplier)110.5 571.2 Q 2.5
(.R)-.55 G(eturns a ne)-2.5 E(w)-.25 E(number object.)110.5 583.2 Q F1
([Number] times: [Block])87 612 Q F0
(Runs the block of code a 'Number' of times.)110.5 624 Q
(This is the most basic form of a loop.)110.5 636 Q(Usage:)110.5 660 Q
2.5(7t)110.5 684 S(imes: { :i Pen write: i. }.)-2.5 E(The e)110.5 708 Q
(xample abo)-.15 E .3 -.15(ve r)-.15 H
(uns the block 7 times. The current iteration).15 E
(number is passed to the block as a parameter \(i in this e)110.5 720 Q
(xample\).)-.15 E 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(8)
190.955 E 0 Cg EP
%%Page: 9 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Number] *=: [Number])87 84 Q
F0(Multiplies the number ITSELF by multiplier)110.5 96 Q 2.5(,t)-.4 G
(his message will change the)-2.5 E -.25(va)110.5 108 S
(lue of the number object itself instead of returning a ne).25 E 2.5(wn)
-.25 G(umber)-2.5 E(.)-.55 E(Usage:)110.5 132 Q 2.5(x:)110.5 156 S 2.5
(=5)-2.5 G(.)-2.5 E 2.5(x*)110.5 168 S(=: 2. #x is no)-2.5 E 2.5(w1)-.25
G(0.)-2.5 E
(Use this message to apply the operation to the object itself instead)
110.5 192 Q(of creating and returning a ne)110.5 204 Q 2.5(wo)-.25 G
(bject.)-2.5 E F1([Number] / [Number])87 232.8 Q F0(Di)110.5 244.8 Q
(vides the number by the speci\214ed di)-.25 E(vider)-.25 E 2.5(.R)-.55
G(eturns a ne)-2.5 E(w)-.25 E(number object.)110.5 256.8 Q F1
([Number] /=: [Number])87 285.6 Q F0(Di)110.5 297.6 Q
(vides the number ITSELF by di)-.25 E(vider)-.25 E 2.5(,t)-.4 G
(his message will change the)-2.5 E -.25(va)110.5 309.6 S
(lue of the number object itself instead of returning a ne).25 E 2.5(wn)
-.25 G(umber)-2.5 E(.)-.55 E(Usage:)110.5 333.6 Q 2.5(x:)110.5 357.6 S
2.5(=1)-2.5 G(0.)-2.5 E 2.5(x/)110.5 369.6 S(=: 2. #x will no)-2.5 E 2.5
(wb)-.25 G 2.5(e5)-2.5 G(.)-2.5 E
(Use this message to apply the operation to the object itself instead)
110.5 393.6 Q(of generating a ne)110.5 405.6 Q 2.5(wo)-.25 G(bject.)-2.5
E F1([Number] mod: [modulo])87 434.4 Q F0
(Returns the modulo of the number)110.5 446.4 Q 2.5(.T)-.55 G
(his message will return a ne)-2.5 E(w)-.25 E
(object representing the modulo of the recipient.)110.5 458.4 Q(Usage:)
110.5 482.4 Q 2.5(x:)110.5 506.4 S 2.5(=1)-2.5 G 2.5(1m)-2.5 G
(od: 3. #x will no)-2.5 E 2.5(wb)-.25 G 2.5(e2)-2.5 G
(Use this message to apply the operation of di)110.5 530.4 Q
(vision to the)-.25 E(object itself instead of generating a ne)110.5
542.4 Q 2.5(wo)-.25 G(ne.)-2.5 E F1([Number] toP)87 571.2 Q -.1(ow)-.2 G
(erOf: [po).1 E(wer])-.1 E F0(Returns a ne)110.5 583.2 Q 2.5(wo)-.25 G
(bject representing the)-2.5 E(number to the speci\214ed po)110.5 595.2
Q(wer)-.25 E(.)-.55 E(Usage:)110.5 619.2 Q 2.5(x:)110.5 643.2 S 2.5(=2t)
-2.5 G(oPo)-2.5 E(werOf: 8. #x will be 256)-.25 E(The e)110.5 667.2 Q
(xample abo)-.15 E .3 -.15(ve w)-.15 H(ill raise 2 to the po).15 E
(wer of 8 resulting in)-.25 E 2.5(an)110.5 679.2 S .5 -.25(ew N)-2.5 H
(umber object: 256.).25 E 165.955(0.0.6.6 10)72 768 R(December 2017)2.5
E(9)190.955 E 0 Cg EP
%%Page: 10 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Number] pos)87 84 Q F0
(Returns a boolean indicating wether the number is positi)110.5 96 Q
-.15(ve)-.25 G(.).15 E(This message will return a boolean object 'T)
110.5 108 Q(rue' if the recipient is)-.35 E(positi)110.5 120 Q .3 -.15
(ve a)-.25 H(nd 'F).15 E(alse' otherwise.)-.15 E(Usage:)110.5 144 Q
(hope := 0.1.)110.5 168 Q 2.5(\(h)110.5 180 S(ope pos \) ifT)-2.5 E
(rue: { Pen write: 'Still a little hope for humanity'. }.)-.35 E(The e)
110.5 204 Q(xample abo)-.15 E .3 -.15(ve w)-.15 H
(ill print the message because hope is higher than 0.).15 E F1
([Number] neg)87 232.8 Q F0
(Returns a boolean indicating wether the number is ne)110.5 244.8 Q -.05
(ga)-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E
(This message will return a boolean object 'T)110.5 256.8 Q
(rue' if the recipient is)-.35 E(ne)110.5 268.8 Q -.05(ga)-.15 G(ti).05
E .3 -.15(ve a)-.25 H(nd 'F).15 E(alse' otherwise. It')-.15 E 2.5(st)
-.55 G(he eaxct opposite of the 'positi)-2.5 E -.15(ve)-.25 G(').15 E
(message.)110.5 280.8 Q(Usage:)110.5 304.8 Q(hope := -1.)110.5 328.8 Q
(\(hope ne)110.5 340.8 Q(g\) ifT)-.15 E
(rue: { Pen write: 'No hope left'. }.)-.35 E(The e)110.5 364.8 Q
(xample abo)-.15 E .3 -.15(ve w)-.15 H
(ill print the message because the v).15 E(alue of the v)-.25 E(ariable)
-.25 E(hope is less than 0.)110.5 376.8 Q F1([Number] max: [other])87
405.6 Q F0(Returns the biggest number of the tw)110.5 417.6 Q(o.)-.1 E
(Usage:)110.5 441.6 Q 2.5(x:)110.5 465.6 S 2.5(=6m)-2.5 G
(ax: 4. #x is 6)-2.5 E 2.5(x:)110.5 477.6 S 2.5(=6m)-2.5 G
(ax: 7. #x is 7)-2.5 E F1([Number] min: [other])87 506.4 Q F0
(Returns a the smallest number)110.5 518.4 Q(.)-.55 E(Usage:)110.5 542.4
Q 2.5(x:)110.5 566.4 S 2.5(=6m)-2.5 G(in: 4. #x is 4)-2.5 E 2.5(x:)110.5
578.4 S 2.5(=6m)-2.5 G(in: 7. #x is 7)-2.5 E F1([Number] factorial)87
607.2 Q F0(Calculates the f)110.5 619.2 Q(actorial of a number)-.1 E(.)
-.55 E F1([Number] to: [number] step: [step] do: [block])87 648 Q F0
(Runs the speci\214ed block for each step it tak)110.5 660 Q
(es to go from)-.1 E(the start v)110.5 672 Q(alue to the tar)-.25 E
(get v)-.18 E(alue using the speci\214ed step size.)-.25 E
(This is basically ho)110.5 684 Q 2.5(wy)-.25 G(ou write for)-2.5 E
(-loops in Citron.)-.2 E(Usage:)110.5 708 Q 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(10)185.955 E 0 Cg EP
%%Page: 11 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E 2.5(1t)110.5 84 S
(o: 5 step: 1 do: { :step Pen write: ')-2.5 E(this is step #'+step. }.)
-.18 E/F1 10/Times-Bold@0 SF([Number] to: [number] step: [step])87 112.8
Q([Number] \215oor)87 153.6 Q F0(Gi)110.5 165.6 Q -.15(ve)-.25 G 2.5(st)
.15 G(he lar)-2.5 E(gest inte)-.18 E(ger less than the recipient.)-.15 E
(Usage:)110.5 189.6 Q 2.5(x:)110.5 213.6 S 2.5(=4)-2.5 G(.5)-2.5 E 2.5
(y:)110.5 225.6 S 2.5(=x\215)-2.5 G(oor)-2.5 E 2.5(.#)-.55 G 2.5(yw)-2.5
G(ill be 4)-2.5 E(The e)110.5 249.6 Q(xample abo)-.15 E .3 -.15(ve a)
-.15 H(pplies the \215oor function to the recipient \(4.5\)).15 E
(returning a ne)110.5 261.6 Q 2.5(wn)-.25 G(umber object \(4\).)-2.5 E
F1([Number] ceil)87 290.4 Q F0
(Rounds up the recipient number and returns the ne)110.5 302.4 Q
(xt higher inte)-.15 E(ger number)-.15 E(as a result.)110.5 314.4 Q
(Usage:)110.5 338.4 Q 2.5(x:)110.5 362.4 S 2.5(=4)-2.5 G(.5.)-2.5 E 2.5
(y=xc)110.5 374.4 S(eil. #y will be 5)-2.5 E(The e)110.5 398.4 Q
(xample abo)-.15 E .3 -.15(ve a)-.15 H
(pplies the ceiling function to the recipient \(4.5\)).15 E
(returning a ne)110.5 410.4 Q 2.5(wn)-.25 G(umber object \(5\).)-2.5 E
F1([Number] r)87 439.2 Q(ound)-.18 E F0(Returns the rounded number)110.5
451.2 Q(.)-.55 E F1([Number] abs)87 480 Q F0
(Returns the absolute \(unsigned, positi)110.5 492 Q -.15(ve)-.25 G 2.5
(\)v).15 G(alue of the number)-2.75 E(.)-.55 E(Usage:)110.5 516 Q 2.5
(x:)110.5 540 S 2.5(=-)-2.5 G(7.)-2.5 E 2.5(y:)110.5 552 S 2.5(=xa)-2.5
G(bs. #y will be 7)-2.5 E(The e)110.5 576 Q(xample abo)-.15 E .3 -.15
(ve s)-.15 H(trips the sign of).15 E 2.5(ft)-.25 G(he v)-2.5 E
(alue -7 resulting)-.25 E(in 7.)110.5 588 Q F1([Number] sqrt)87 616.8 Q
F0(Returns the square root of the recipient.)110.5 628.8 Q(Usage:)110.5
652.8 Q 2.5(x:)110.5 676.8 S 2.5(=4)-2.5 G(9.)-2.5 E 2.5(y:)110.5 688.8
S 2.5(=xs)-2.5 G(qrt. #y will be 7)-2.5 E(The e)110.5 712.8 Q
(xample abo)-.15 E .3 -.15(ve t)-.15 H(ak).15 E
(es the square root of 49, resulting in the)-.1 E(number 7.)110.5 724.8
Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(11)185.955 E 0 Cg EP
%%Page: 12 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Number] exp)87 84 Q F0
(Returns the e)110.5 96 Q(xponent of the number)-.15 E(.)-.55 E F1
([Number] sin)87 124.8 Q F0(Returns the sine of the number)110.5 136.8 Q
(.)-.55 E F1([Number] cos)87 165.6 Q F0
(Returns the cosine of the number)110.5 177.6 Q(.)-.55 E F1
([Number] tan)87 206.4 Q F0(Caculates the tangent of a number)110.5
218.4 Q(.)-.55 E F1([Number] atan)87 247.2 Q F0
(Caculates the arctangent of a number)110.5 259.2 Q(.)-.55 E F1
([Number] log)87 288 Q F0(Calculates the log)110.5 300 Q
(arithm of a number)-.05 E(.)-.55 E F1([Number] shiftRight: [Number])87
328.8 Q F0(Only with inte)113 340.8 Q(gers)-.15 E F1
([Number] shiftLeft: [Number])87 369.6 Q([Number] integerOr: [Number])87
410.4 Q([Number] integerAnd: [Number])87 451.2 Q
([Number] integerXor: [Number])87 492 Q([Number] toByte)87 532.8 Q F0
(Con)110.5 544.8 Q -.15(ve)-.4 G(rts a number to a single byte.).15 E F1
([Number] toString)87 573.6 Q F0(Wrapper for cast function.)110.5 585.6
Q F1([Number] toBoolean)87 614.4 Q F0
(Casts a number to a boolean object.)110.5 626.4 Q/F2 10.95/Times-Bold@0
SF(String)110.738 667.2 Q F1(_OBJ_DEF String)108 679.2 Q F0 165.955
(0.0.6.6 10)72 768 R(December 2017)2.5 E(12)185.955 E 0 Cg EP
%%Page: 13 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF(String)87 84 Q F0(Literal:)
110.5 96 Q('Hello W)110.5 120 Q(orld, this is a String.)-.8 E(')-.7 E
2.5(As)110.5 144 S
(equence of characters. In Citron, strings are UTF-8 a)-2.5 E -.1(wa)
-.15 G(re.).1 E -1.1(Yo)110.5 156 S 2.5(um)1.1 G
(ay only use single quotes. T)-2.5 E 2.5(oe)-.8 G
(scape a character use the)-2.5 E(backslash '\264 character)110.5 168 Q
(.)-.55 E F1([String] isConstructible: [Object])87 196.8 Q F0
(returns whether object is constructible from string)110.5 208.8 Q F1
([String] unpack: [String:Ref])87 237.6 Q F0(Assign ref to string)110.5
249.6 Q F1([String] bytes)87 278.4 Q F0
(Returns the number of bytes in a string, as opposed to)110.5 290.4 Q(l\
ength which returns the number of UTF-8 code points \(symbols or charac\
ters\).)110.5 302.4 Q F1([String] = [other])87 331.2 Q F0(Returns T)
110.5 343.2 Q(rue if the other string is the same \(in bytes\).)-.35 E
F1([String] != [other])87 372 Q F0(Returns T)110.5 384 Q
(rue if the other string is not the same \(in bytes\).)-.35 E F1
([String] length)87 412.8 Q F0
(Returns the length of the string in symbols.)110.5 424.8 Q
(This message is UTF-8 unicode a)110.5 436.8 Q -.1(wa)-.15 G
(re. A 4 byte character will be counted as ONE.).1 E F1
([String] + [other])87 465.6 Q F0
(Appends other string to self and returns the resulting)110.5 477.6 Q
(string as a ne)110.5 489.6 Q 2.5(wo)-.25 G(bject.)-2.5 E F1
([String] append: [String].)87 518.4 Q F0
(Appends the speci\214ed string to itself. This is dif)110.5 530.4 Q
(ferent from the '+')-.25 E(message, the '+' message adds the speci\214\
ed string while creating a ne)110.5 542.4 Q 2.5(ws)-.25 G(tring.)-2.5 E
(Appends on the other hand modi\214es the original string.)110.5 554.4 Q
(Usage:)110.5 578.4 Q 2.5(x:)110.5 602.4 S 2.5(=')-2.5 G(Hello '.)-2.5 E
2.5(xa)110.5 614.4 S(ppend: 'W)-2.5 E(orld'.)-.8 E
(Pen write: x. #Hello W)110.5 626.4 Q(orld)-.8 E
(Instead of using the append message you may also use its short form,)
110.5 650.4 Q(lik)110.5 662.4 Q 2.5(et)-.1 G(his:)-2.5 E 2.5(x+)110.5
686.4 S(=: 'W)-2.5 E(orld'.)-.8 E 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(13)185.955 E 0 Cg EP
%%Page: 14 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([String] multiply: [Number].)
87 84 Q F0(Appends the speci\214ed string to itself as man)110.5 96 Q
2.5(yt)-.15 G(imes as [Number])-2.5 E(alias: *)110.5 108 Q F1
([String] f)87 136.8 Q(ormatObjects: [Array].)-.25 E F0
(Creates a string with the template format and the speci\214ed objects)
110.5 148.8 Q(Usage:)110.5 172.8 Q(fmt := 'Hello, %s! %d is a number!')
110.5 196.8 Q(str := fmt formatObjects: \(Array ne)110.5 208.8 Q 2.5
(w<')-.25 G -.8(Wo)-2.5 G(rld', 23\).).8 E F1([String] f)87 237.6 Q
(ormatMap: [Map])-.25 E F0(format a format string based of)110.5 249.6 Q
2.5(fam)-.25 G(ap)-2.5 E(e.g.)110.5 273.6 Q(format := ')113 285.6 Q
(this \264%{string}\264 contains some wierd %{shit}.)-.18 E('.)-.7 E
(fmtd := format formatMap: \(Map ne)113 297.6 Q 2.5(wp)-.25 G(ut: ')-2.5
E(shit' at: ')-.55 E(shit', put: format at: ')-.55 E(string'\).)-.55 E
2.5(#')113 309.6 S(this \264this \264%{string}\264 contains some wierd \
%{shit}.\264 contains some weird shit.)-2.68 E(')-.7 E F1([String] fr)87
338.4 Q(om: [position] to: [destination])-.18 E F0
(Returns a portion of a string de\214ned by from-to v)110.5 350.4 Q
(alues.)-.25 E(This message is UTF-8 unicode a)110.5 362.4 Q -.1(wa)-.15
G(re.).1 E(Usage:)110.5 386.4 Q('hello' from: 2 to: 3. #ll)110.5 410.4 Q
F1([String] fr)87 439.2 Q(om: [start] length: [length])-.18 E F0
(Returns a portion of a string de\214ned by from)110.5 451.2 Q
(and length v)110.5 463.2 Q(alues.)-.25 E
(This message is UTF-8 unicode a)110.5 475.2 Q -.1(wa)-.15 G(re.).1 E
(Usage:)110.5 499.2 Q('hello' from: 2 length: 3. #llo)110.5 523.2 Q F1
([String] skip: [number])87 552 Q F0
(Returns a string without the \214rst X characters.)110.5 564 Q F1
([String] sliceFr)87 592.8 Q(om: [number] length: [number])-.18 E F0
(slice a string from,length and return the sliced. modi\214es string)
110.5 604.8 Q F1([String] at: [position])87 633.6 Q F0
(Returns the character at the speci\214ed position \(UTF8 a)110.5 645.6
Q -.1(wa)-.15 G(re\).).1 E -1.1(Yo)110.5 657.6 S 2.5(um)1.1 G
(ay also use the alias '@'.)-2.5 E(Usage:)110.5 681.6 Q
(\('hello' at: 2\). #l)110.5 705.6 Q(\('hello' @ 2\). #l)110.5 717.6 Q
165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(14)185.955 E 0 Cg EP
%%Page: 15 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([String] byteAt: [position])87
84 Q F0(Returns the byte at the speci\214ed position \(in bytes\).)110.5
96 Q(Note that you cannot use the '@' message here because that will)
110.5 108 Q
(return the unicode point at the speci\214ed position, not the byte.)
110.5 120 Q(Usage:)110.5 144 Q(\('abc' byteAt: 1\). #98)110.5 156 Q F1
([String] indexOf: [subject])87 184.8 Q F0(Returns the inde)110.5 196.8
Q 2.5(x\()-.15 G(character number)-2.5 E 2.5(,n)-.4 G
(ot the byte!\) of the)-2.5 E(needle in the haystack.)110.5 208.8 Q
(Usage:)110.5 232.8 Q('\214nd the needle' inde)110.5 256.8 Q
(xOf: 'needle'. #9)-.15 E F1([String] upper)87 285.6 Q F0(Returns a ne)
110.5 297.6 Q 2.5(wu)-.25 G(ppercased v)-2.5 E(ersion of the string.)
-.15 E(Note that this is just basic ASCII case functionality)110.5 309.6
Q 2.5(,t)-.65 G(his should only)-2.5 E(be used for internal k)110.5
321.6 Q -.15(ey)-.1 G 2.5(sa).15 G
(nd as a basic utility function. This function)-2.5 E(DOES NO)110.5
333.6 Q 2.5(TW)-.4 G(ORK WITH UTF8 characters !)-2.6 E F1([String] lo)87
362.4 Q(wer)-.1 E F0(Returns a ne)110.5 374.4 Q 2.5(wl)-.25 G -.25(ow)
-2.5 G(ercased v).25 E(ersion of the string.)-.15 E
(Note that this is just basic ASCII case functionality)110.5 386.4 Q 2.5
(,t)-.65 G(his should only)-2.5 E(be used for internal k)110.5 398.4 Q
-.15(ey)-.1 G 2.5(sa).15 G
(nd as a basic utility function. This function)-2.5 E(DOES NO)110.5
410.4 Q 2.5(TW)-.4 G(ORK WITH UTF8 characters !)-2.6 E F1([String] lo)87
439.2 Q(wer1st)-.1 E F0(Con)110.5 451.2 Q -.15(ve)-.4 G
(rts the \214rst character of the recipient to lo).15 E(wercase and)-.25
E(returns the resulting string object.)110.5 463.2 Q F1
([String] upper1st)87 492 Q F0(Con)110.5 504 Q -.15(ve)-.4 G
(rts the \214rst character of the recipient to uppercase and).15 E
(returns the resulting string object.)110.5 516 Q F1
([String] lastIndexOf: [subject])87 544.8 Q F0(Returns the inde)110.5
556.8 Q 2.5(x\()-.15 G(character number)-2.5 E 2.5(,n)-.4 G
(ot the byte!\) of the)-2.5 E(needle in the haystack.)110.5 568.8 Q
(Usage:)110.5 592.8 Q('\214nd the needle' lastInde)110.5 616.8 Q
(xOf: 'needle'. #9)-.15 E F1([String] r)87 645.6 Q
(eplace: [string] with: [other])-.18 E F0
(Replaces needle with replacement in original string and returns)110.5
657.6 Q(the result as a ne)110.5 669.6 Q 2.5(ws)-.25 G(tring object.)
-2.5 E(Usage:)110.5 693.6 Q('LiLo BootLoader' replace: 'L)110.5 717.6 Q
2.5('w)-.92 G(ith: ')-2.5 E(l'. #lilo Bootloader)-.1 E 165.955
(0.0.6.6 10)72 768 R(December 2017)2.5 E(15)185.955 E 0 Cg EP
%%Page: 16 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([String] \214ndP)87 84 Q
(atter)-.1 E(n: [String] do: [Block] options: [String].)-.15 E F0
(Matches the POSIX or PCRE \(depending on the #de\214nes\) re)110.5 96 Q
(gular e)-.15 E(xpression in the \214rst ar)-.15 E(gument ag)-.18 E
(ainst)-.05 E(the string and e)110.5 108 Q -.15(xe)-.15 G
(cutes the speci\214ed block on e).15 E -.15(ve)-.25 G(ry match passing)
.15 E(an array containing the matches.)110.5 120 Q
(The options parameter can be used to pass speci\214c \215ags to the)
110.5 144 Q(re)110.5 156 Q(gular e)-.15 E
(xpression engine. As of the moment of writing this functionality)-.15 E
(has not been implemented yet. The only \215ag you can set at this mome\
nt is)110.5 168 Q
(the 'ignore' \215ag, just a test \215ag. This \215ag does not e)110.5
180 Q -.15(xe)-.15 G(cute the block.).15 E(Usage:)110.5 204 Q('hello w)
110.5 228 Q(orld' \214ndP)-.1 E(attern: '\([hl]\)' do: { :arr)-.15 E
(Pen write: \(arr join: '|'\), brk.)113 240 Q 2.5(}o)110.5 252 S
(ptions: ')-2.5 E('.)-.74 E(On e)110.5 276 Q -.15(ve)-.25 G
(ry match the block gets e).15 E -.15(xe)-.15 G
(cuted and the matches are).15 E(passed to the block as ar)110.5 288 Q
(guments. Y)-.18 E(ou can also use this feature to replace)-1.1 E(parts\
 of the string, simply return the replacement string in your block.)
110.5 300 Q F1([String] \214ndP)87 328.8 Q(atter)-.1 E
(n: [String] do: [Block].)-.15 E F0(Same as \214ndP)110.5 340.8 Q
(attern:do:options: b)-.15 E(ut without the options, no \215ags will)-.2
E(be send to the re)110.5 352.8 Q(ge)-.15 E 2.5(xe)-.15 G(ngine.)-2.5 E
F1([String] contains: [String])87 381.6 Q F0(Returns T)110.5 393.6 Q
(rue if the other string is a substring.)-.35 E F1([String] containsP)87
422.4 Q(atter)-.1 E(n: [String].)-.15 E F0 -.7(Te)110.5 434.4 S
(sts the pattern ag).7 E(ainst the string and returns T)-.05 E
(rue if there is a match)-.35 E(and F)110.5 446.4 Q(alse otherwise.)-.15
E(Usage:)110.5 470.4 Q -.25(va)110.5 494.4 S 2.5(rm).25 G
(atch := 'Hello W)-2.5 E(orld' containsP)-.8 E(attern: '[:space:]'.)-.15
E(#match will be T)110.5 506.4 Q
(rue because there is a space in 'Hello W)-.35 E(orld')-.8 E F1
([String] trim)87 535.2 Q F0 -.35(Tr)110.5 547.2 S(ims a string. Remo)
.35 E -.15(ve)-.15 G 2.5(ss).15 G(urrounding white space characters)-2.5
E(from string and returns the result as a ne)110.5 559.2 Q 2.5(ws)-.25 G
(tring object.)-2.5 E(Usage:)110.5 583.2 Q 2.5('h)110.5 607.2 S
(ello ' trim. #hello)-2.5 E(The e)110.5 631.2 Q(xample abo)-.15 E .3
-.15(ve w)-.15 H(ill strip all white space characters from the).15 E
(recipient on both sides of the te)110.5 643.2 Q(xt. Also see: leftT)
-.15 E(rim and rightT)-.35 E(rim)-.35 E(for v)110.5 655.2 Q
(ariations of this message.)-.25 E F1([String] leftT)87 684 Q(rim)-.74 E
F0(Remo)110.5 696 Q -.15(ve)-.15 G 2.5(sa).15 G
(ll the whitespace at the left side of the string.)-2.5 E(Usage:)110.5
720 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(16)185.955 E 0 Cg
EP
%%Page: 17 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(message := ' hello w)110.5 84 Q 2.5(orld '.)-.1 F
(message leftT)110.5 96 Q(rim.)-.35 E(The e)110.5 120 Q(xample abo)-.15
E .3 -.15(ve w)-.15 H(ill remo).15 E .3 -.15(ve a)-.15 H
(ll the whitespace at the left of the).15 E(string b)110.5 132 Q(ut lea)
-.2 E .3 -.15(ve t)-.2 H(he spaces at the right side intact.).15 E/F1 10
/Times-Bold@0 SF([String] rightT)87 160.8 Q(rim)-.74 E F0(Remo)110.5
172.8 Q -.15(ve)-.15 G 2.5(sa).15 G
(ll the whitespace at the right side of the string.)-2.5 E(Usage:)110.5
196.8 Q(message := ' hello w)110.5 220.8 Q 2.5(orld '.)-.1 F
(message rightT)110.5 232.8 Q(rim.)-.35 E(The e)110.5 256.8 Q
(xample abo)-.15 E .3 -.15(ve w)-.15 H(ill remo).15 E .3 -.15(ve a)-.15
H(ll the whitespace at the right of the).15 E(string b)110.5 268.8 Q
(ut lea)-.2 E .3 -.15(ve t)-.2 H(he spaces at the left side intact.).15
E F1([String] toNumber)87 297.6 Q F0(Con)110.5 309.6 Q -.15(ve)-.4 G
(rts string to a number).15 E(.)-.55 E F1([String] toBoolean)87 338.4 Q
F0(Con)110.5 350.4 Q -.15(ve)-.4 G(rts string to boolean).15 E F1
([String] split: [String])87 379.2 Q F0(Con)110.5 391.2 Q -.15(ve)-.4 G
(rts a string to an array by splitting the string using).15 E
(the speci\214ed delimiter \(also a string\).)110.5 403.2 Q F1
([String] characters.)87 432 Q F0
(Splits the string in UTF-8 characters and returns)110.5 444 Q
(those as an array)110.5 456 Q(.)-.65 E(Usage:)110.5 480 Q 2.5(a:)110.5
504 S 2.5(=')-2.5 G(abc' characters.)-2.5 E 2.5(ac)110.5 516 S(ount. #3)
-2.5 E F1([String] toByteArray)87 544.8 Q F0
(Returns an array of bytes representing the string.)110.5 556.8 Q F1
([String] appendByte: [Number].)87 585.6 Q F0(Appends a ra)110.5 597.6 Q
2.5(wb)-.15 G(yte to a string.)-2.5 E F1
([String\(length=1\)] charSub: [Number | String\(length=1\)])87 626.4 Q
F0 -.1(wo)110.5 638.4 S(rks on the underlaying character).1 E(.)-.55 E
F1([String\(length=1\)] charAdd: [Number | String\(length=1\)])87 667.2
Q F0 -.1(wo)110.5 679.2 S(rks on the underlaying character).1 E(.)-.55 E
165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(17)185.955 E 0 Cg EP
%%Page: 18 19
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([String] htmlEscape)87 84 Q F0
(Escapes HTML chars.)110.5 96 Q F1([String] hashW)87 124.8 Q(ithK)-.18 E
(ey: [String])-.25 E F0
(Returns the hash of the recipient String using the speci\214ed k)110.5
136.8 Q -.15(ey)-.1 G(.)-.5 E(The def)110.5 148.8 Q
(ault hash in Citron is the SipHash which is also used internally)-.1 E
(.)-.65 E(SipHash can protect ag)110.5 160.8 Q
(ainst hash \215ooding attacks.)-.05 E F1([String] e)87 189.6 Q -.1(va)
-.15 G(l).1 E F0(Ev)110.5 201.6 Q
(aluates the contents of the string as code.)-.25 E(Usage:)110.5 225.6 Q
2.5(a:)110.5 249.6 S 2.5(=')-2.5 G(Array < 1 ; 2 ; 3' e)-2.5 E -.25(va)
-.25 G(l.).25 E 2.5(x:)110.5 261.6 S 2.5(=a@2)-2.5 G 2.5(.#)-2.5 G(3)
-2.5 E F1([String] escapeQuotes.)87 290.4 Q F0
(Escapes all single quotes in a string. Sending this message to a)110.5
302.4 Q(string will cause all single quotes \('\) to be replaced with \
\(\264\).)110.5 314.4 Q F1([String] randomizeBytesW)87 343.2 Q
(ithLength: [Number].)-.18 E F0(Returns a randomized string with the sp\
eci\214ed length using the pool of)110.5 355.2 Q
(bytes contained in the String object.)110.5 367.2 Q F1([String] r)87
396 Q -2.3 -.15(ev e)-.18 H(rse).15 E F0(re)110.5 408 Q -.15(ve)-.25 G
(rse the string).15 E/F2 10.95/Times-Bold@0 SF -1.007(Tu)110.738 448.8 S
(ple)1.007 E F1(_OBJ_DEF T)108 460.8 Q(uple)-.92 E -.92(Tu)87 489.6 S
(ple).92 E F0(Literal:)110.5 501.6 Q 2.5([i)110.5 525.6 S
(tem , item , ... ] or [])-2.5 E(Examples:)110.5 549.6 Q 2.5([1,2,3])
110.5 573.6 S([])110.5 585.6 Q F2(CodeBlock)110.738 626.4 Q F1
(_OBJ_DEF CodeBlock)108 638.4 Q(Block)87 667.2 Q F0(Literal:)110.5 679.2
Q 2.5({p)110.5 703.2 S(arameters \(if an)-2.5 E
(y\) here... code here... })-.15 E(each parameter has to be pre\214x)
110.5 727.2 Q(ed with)-.15 E 165.955(0.0.6.6 10)72 768 R(December 2017)
2.5 E(18)185.955 E 0 Cg EP
%%Page: 19 20
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E 2.5(ac)110.5 84 S(olon \(:\).)-2.5 E(Examples:)110.5
108 Q 2.5({P)110.5 132 S(en write: 'a simple code block'. } run.)-2.5 E
2.5({:)110.5 144 S(param Pen write: param. } applyT)-2.5 E
(o: 'write this!'.)-.8 E 2.5({:)110.5 156 S 2.5(a:)-2.5 G 2.5(b^a+b)-2.5
G 2.5(.}a)-2.9 G(pplyT)-2.5 E(o: 1 and: 2.)-.8 E 2.5({:)110.5 168 S 2.5
(a:)-2.5 G 2.5(b:)-2.5 G 2.5(c^a+b+c)-2.5 G 2.5(.}a)-2.5 G(pplyT)-2.5 E
(o: 1 and: 2 and: 3.)-.8 E(to enable conte)110.5 192 Q(xt auto-capture,)
-.15 E(qualify captures with the 'const' modi\214er)110.5 204 Q/F1 10
/Times-Bold@0 SF([Block] unpack: [String:Ref])87 232.8 Q F0
(Assign ref to block)110.5 244.8 Q F1([Block] applyT)87 273.6 Q
(o: [object])-.92 E F0
(Runs a block of code using the speci\214ed object as a parameter)110.5
285.6 Q(.)-.55 E(If you run a block using the messages ')110.5 297.6 Q
(run' or 'applyT)-.5 E(o:', me/my will)-.8 E
(refer to the block itself instead of the containing object.)110.5 309.6
Q(the passed 'my' will be respected \214rst,)110.5 333.6 Q
(and if lookup f)110.5 345.6 Q(ails, it will be sw)-.1 E
(apped for the block itself)-.1 E F1([Block] whileT)87 374.4 Q
(rue: [block])-.74 E F0
(Runs a block of code, depending on the outcome runs the other block)
110.5 386.4 Q(as long as the result of the \214rst one equals boolean T)
110.5 398.4 Q(rue.)-.35 E(Usage:)110.5 422.4 Q 2.5(x:)110.5 446.4 S 2.5
(=0)-2.5 G(.)-2.5 E 2.5({^)110.5 458.4 S(\(x < 6\). } whileF)-2.5 E
(alse:)-.15 E 2.5({xa)110.5 470.4 S
(dd: 1. }. #increment x until it reaches 6.)-2.5 E(Here we increment v)
110.5 494.4 Q(ariable x by one until it reaches 6.)-.25 E
(While the number x is lo)110.5 506.4 Q(wer than 6 we k)-.25 E
(eep incrementing it.)-.1 E(Don')110.5 518.4 Q 2.5(tf)-.18 G(or)-2.5 E
(get to use the return ^ symbol in the \214rst block.)-.18 E F1
([Block] whileF)87 547.2 Q(alse: [block])-.25 E F0
(Runs a block of code, depending on the outcome runs the other block)
110.5 559.2 Q(as long as the result of the \214rst one equals to F)110.5
571.2 Q(alse.)-.15 E(Usage:)110.5 595.2 Q 2.5(x:)110.5 619.2 S 2.5(=0)
-2.5 G(.)-2.5 E 2.5({^)110.5 631.2 S(\(x > 5\). })-2.5 E(whileF)110.5
643.2 Q(alse: { x add: 1. }. #increment x until it reaches 6.)-.15 E
(Here we increment v)110.5 667.2 Q(ariable x by one until it reaches 6.)
-.25 E(While the number x is not higher than 5 we k)110.5 679.2 Q
(eep incrementing it.)-.1 E(Don')110.5 691.2 Q 2.5(tf)-.18 G(or)-2.5 E
(get to use the return ^ symbol in the \214rst block.)-.18 E 165.955
(0.0.6.6 10)72 768 R(December 2017)2.5 E(19)185.955 E 0 Cg EP
%%Page: 20 21
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Block] run)87 84 Q F0
(Sending the unary message ')110.5 96 Q
(run' to a block will cause it to e)-.5 E -.15(xe)-.15 G(cute.).15 E
(The run message tak)110.5 108 Q(es no ar)-.1 E(guments, if you w)-.18 E
(ant to use the block as a function)-.1 E(and send ar)110.5 120 Q
(guments, consider using the applyT)-.18 E(o-f)-.8 E
(amily of messages instead.)-.1 E
(This message just simply runs the block of code without an)110.5 132 Q
2.5(ya)-.15 G -.18(rg)-2.5 G(uments.).18 E(Usage:)110.5 156 Q 2.5({P)
110.5 180 S(en write: 'Hello W)-2.5 E(orld'. } run. #prints 'Hello W)-.8
E(orld')-.8 E(The e)110.5 204 Q(xample abo)-.15 E .3 -.15(ve w)-.15 H
(ill run the code inside the block and display).15 E(the greeting.)110.5
216 Q F1([Block] set: [name] v)87 244.8 Q(alue: [object])-.1 E F0
(Sets a v)110.5 256.8 Q(ariable in a block of code. This ho)-.25 E 2.5
(wy)-.25 G(ou can get closure-lik)-2.5 E(e)-.1 E(functionality)110.5
268.8 Q(.)-.65 E(Usage:)110.5 292.8 Q
(shout := { Pen write: \(my message + '!!!'\). }.)110.5 316.8 Q
(shout set: 'message' v)110.5 328.8 Q(alue: 'hello'.)-.25 E(shout run.)
110.5 340.8 Q(Here we assign a block to a v)110.5 364.8 Q
(ariable named ')-.25 E(shout'.)-.55 E 1.6 -.8(We a)110.5 376.8 T
(ssign the string 'hello' to the v).8 E
(ariable 'message' inside the block.)-.25 E(When we in)110.5 388.8 Q -.2
(vo)-.4 G .2 -.1(ke t).2 H(he block ').1 E
(shout' by sending the run message without an)-.55 E(y)-.15 E(ar)110.5
400.8 Q(guments it will display the string: 'hello!!!'.)-.18 E
(Similarly)110.5 424.8 Q 2.5(,y)-.65 G
(ou could use this technique to create a block that returns a)-2.5 E(bl\
ock that applies a formula \(for instance simple multiplication\) and t\
hen set the)110.5 436.8 Q(multiplier to use in the formula. This w)110.5
448.8 Q(ay)-.1 E 2.5(,y)-.65 G(ou could create a block)-2.5 E -.2(bu)
110.5 460.8 S(ilding 'formula blocks'. This is ho).2 E 2.5(wy)-.25 G
(ou implement & use closures)-2.5 E(in Citron.)110.5 472.8 Q
(There is no need to capture v)110.5 496.8 Q
(alues with this message if you don')-.25 E 2.5(tr)-.18 G(equire the)
-2.5 E(name of the v)110.5 508.8 Q(ariable to be an)-.25 E
(ything speci\214c.)-.15 E(In such circumstances, you may use the autom\
atic capture quali\214er `const`)110.5 520.8 Q(to capture the v)110.5
532.8 Q(alue directly where it is needed.)-.25 E F1([Block] err)87 561.6
Q(or: [object].)-.18 E F0(Sets error \215ag on a block of code.)110.5
573.6 Q(This will thro)110.5 585.6 Q 2.5(wa)-.25 G 2.5(ne)-2.5 G
(rror / e)-2.5 E(xception.)-.15 E -1.1(Yo)110.5 597.6 S 2.5(uc)1.1 G
(an attach an object to the error)-2.5 E 2.5(,f)-.4 G(or instance)-2.5 E
(an error message.)110.5 609.6 Q(Example:)110.5 633.6 Q({)110.5 657.6 Q
(thisBlock error: 'oops!'.)115.5 669.6 Q 2.5(}c)110.5 681.6 S
(atch: { :errorMessage)-2.5 E(Pen write: errorMessage.)115.5 693.6 Q
(}, run.)110.5 705.6 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E
(20)185.955 E 0 Cg EP
%%Page: 21 22
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Block] catch: [otherBlock])87
84 Q F0(Associates an error clause to a block.)110.5 96 Q
(If an error \(e)110.5 108 Q
(xception\) occurs within the block this block will be)-.15 E -.15(exe)
110.5 120 S(cuted.).15 E(Example:)110.5 144 Q(#Raise error on di)110.5
168 Q(vision by zero.)-.25 E({)110.5 180 Q -.25(va)118 192 S 2.5(rz:).25
G 2.5(=4/0)-2.5 G(.)-2.5 E 2.5(}c)110.5 204 S(atch: { :errorMessage)-2.5
E(Pen write: e, brk.)118 216 Q(}, run.)110.5 228 Q F1([Block] toString)
87 256.8 Q F0
(Returns a string representation of the Block. This basic beha)110.5
268.8 Q(vior)-.2 E 2.5(,p)-.4 G(art)-2.5 E(of an)110.5 280.8 Q 2.5(yo)
-.15 G(bject will just return [Block]. Other objects typically o)-2.5 E
-.15(ve)-.15 G(rride this).15 E(beha)110.5 292.8 Q
(vior with more useful implementations.)-.2 E/F2 10.95/Times-Bold@0 SF
(Array)110.738 333.6 Q F1(_OBJ_DEF Array)108 345.6 Q([Array] new)87
374.4 Q F0(Creates a ne)110.5 386.4 Q 2.5(wA)-.25 G(rray)-2.5 E(.)-.65 E
(Usage:)110.5 410.4 Q 2.5(a:)110.5 434.4 S 2.5(=A)-2.5 G(rray ne)-2.5 E
-.65(w.)-.25 G(or)110.5 458.4 Q 2.5(,t)-.4 G(he short form:)-2.5 E 2.5
(a:)110.5 482.4 S 2.5(=A)-2.5 G(rray \342 1 ; 2 ; 3.)-2.5 E
(or \(if you prefer ASCII only symbols\):)110.5 506.4 Q 2.5(a:)110.5
530.4 S 2.5(=A)-2.5 G(rray < 1 ; 2 ; 3.)-2.5 E F1([Array] copy)87 559.2
Q F0(shallo)110.5 571.2 Q 2.5(wc)-.25 G(op)-2.5 E 2.5(yo)-.1 G 2.5(ft)
-2.5 G(he array)-2.5 E F1([Array] type)87 600 Q F0
(Returns the string 'Array'.)110.5 612 Q F1([Array] push: [Element])87
640.8 Q F0(Pushes an element on top of the array)110.5 652.8 Q(.)-.65 E
(Usage:)110.5 676.8 Q(numbers := Array ne)110.5 700.8 Q -.65(w.)-.25 G
(numbers push: 3.)110.5 712.8 Q 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(21)185.955 E 0 Cg EP
%%Page: 22 23
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Array] min)87 84 Q F0
(Returns the minimum v)110.5 96 Q(alue from an array)-.25 E(.)-.65 E
(Usage:)110.5 120 Q 2.5(a:)110.5 144 S 2.5(=A)-2.5 G
(rray \342 8 ; 4 ; 2 ; 16.)-2.5 E 2.5(m:)110.5 156 S 2.5(=am)-2.5 G
(in. #2)-2.5 E F1([Array] max)87 184.8 Q F0(Returns the maximum v)110.5
196.8 Q(alue from an array)-.25 E(.)-.65 E(Usage:)110.5 220.8 Q 2.5(a:)
110.5 244.8 S 2.5(=A)-2.5 G(rray \342 8 ; 4 ; 2 ; 16.)-2.5 E 2.5(m:)
110.5 256.8 S 2.5(=am)-2.5 G(ax. #16)-2.5 E F1([Array] sum)87 285.6 Q F0
-.8(Ta)110.5 297.6 S -.1(ke).8 G 2.5(st).1 G(he sum of an array)-2.5 E
2.5(.T)-.65 G(his message will calculate the)-2.5 E
(sum of the elements in the array)110.5 309.6 Q(.)-.65 E(Usage:)110.5
333.6 Q 2.5(a:)110.5 357.6 S 2.5(=A)-2.5 G(rray \342 1 ; 2 ; 3.)-2.5 E
2.5(s:)110.5 369.6 S 2.5(=as)-2.5 G(um. #6)-2.5 E(In the e)110.5 393.6 Q
(xample abo)-.15 E -.15(ve)-.15 G 2.5(,t).15 G
(he sum of array will be stored in s and)-2.5 E(it')110.5 405.6 Q 2.5
(sv)-.55 G(alue will be 6.)-2.75 E F1([Array] pr)87 434.4 Q(oduct)-.18 E
F0 -.8(Ta)110.5 446.4 S -.1(ke).8 G 2.5(st).1 G(he product of an array)
-2.5 E 2.5(.O)-.65 G 2.5(nr)-2.5 G(ecei)-2.5 E(ving this message, the)
-.25 E(Array recipient object will calculate the product of its)110.5
458.4 Q(numerical elements.)110.5 470.4 Q(Usage:)110.5 494.4 Q 2.5(a:)
110.5 518.4 S 2.5(=A)-2.5 G(rray \342 2 ; 4 ; 8.)-2.5 E 2.5(p:)110.5
530.4 S 2.5(=ap)-2.5 G(roduct. #64)-2.5 E(In the e)110.5 554.4 Q
(xample abo)-.15 E -.15(ve)-.15 G 2.5(,t).15 G
(he product of the array will be calculated)-2.5 E
(because the array recei)110.5 566.4 Q -.15(ve)-.25 G 2.5(st).15 G
(he message 'product'. The product of the elements)-2.5 E 2.5(\(2*4*8=6)
110.5 578.4 S 2.5(4\)w)-2.5 G(ill be stored in p.)-2.5 E F1
([Array] * [o:Number | Array])87 607.2 Q F0
(Repeats the array o times if o is a number)110.5 619.2 Q 2.5(,a)-.4 G
(nd generates an array multiplication)-2.5 E
(for myself and o if o is an array)110.5 631.2 Q F1
([Array] intersperse: [o: Object])87 660 Q F0
(places an 'o' between all array elements)110.5 672 Q(returns an array)
110.5 684 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(22)185.955 E
0 Cg EP
%%Page: 23 24
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Array] map: [Block].)87 84 Q
F0(Iterates o)110.5 96 Q -.15(ve)-.15 G 2.5(rt).15 G(he array)-2.5 E 2.5
(.P)-.65 G(assing each element as a k)-2.65 E -.15(ey)-.1 G(-v).15 E
(alue pair to the)-.25 E(speci\214ed block.)110.5 108 Q
(The map message will pass the follo)110.5 120 Q(wing ar)-.25 E
(guments to the block, the k)-.18 E -.15(ey)-.1 G(,)-.5 E(the v)110.5
132 Q(alue and a reference to the array itself. The last ar)-.25 E
(gument might seem)-.18 E(redundant b)110.5 144 Q(ut allo)-.2 E
(ws for a more functional programming style.)-.25 E(Usage:)110.5 168 Q
(\214les map: sho)110.5 192 Q(wName.)-.25 E(\214les map: {)110.5 204 Q
(:k)115.5 216 Q .3 -.15(ey :)-.1 H(\214lename :\214les).15 E
(Pen write: \214lename, brk.)115.5 228 Q(}.)110.5 240 Q F1
([Array] each: [Block].)87 268.8 Q F0(Alias for [Array] map: [Block].)
113 280.8 Q F1([Array] map_v: [Block].)87 309.6 Q F0(Iterates o)110.5
321.6 Q -.15(ve)-.15 G 2.5(rt).15 G(he array)-2.5 E 2.5(.P)-.65 G
(assing each element as a v)-2.65 E(alue to the)-.25 E
(speci\214ed block.)110.5 333.6 Q(The map message will pass only the v)
110.5 345.6 Q(alue.)-.25 E(Usage:)110.5 369.6 Q(\214les map_v: sho)110.5
393.6 Q(wName.)-.25 E(\214les map_v: {)110.5 405.6 Q(:\214lename)115.5
417.6 Q(Pen write: \214lename, brk.)115.5 429.6 Q(}.)110.5 441.6 Q F1
2.5(*[)87 470.4 S(Array] each_v: [Block].)-2.5 E F0 -2.5 2.5(** A)108
482.4 T(lias for [Array] map_v: [Block].)-2.5 E F1([Array] fr)87 511.2 Q
(om: [Number] lengthMax: [Number])-.18 E F0(mak)113 523.2 Q
(es n-tuple-wise iterations)-.1 E(If `\214ll` is speci\214ed, that will\
 be used to \214ll when we are elements short)110.5 535.2 Q
(Else Nil will be passed)110.5 547.2 Q F1([Array] e)87 576 Q -.1(ve)-.15
G(ry: [Number] do: [Block] \214ll: [Object].).1 E F0([Array] e)110.5 588
Q -.15(ve)-.25 G(ry: [Number] do: [Block].).15 E(mak)113 612 Q
(es n-tuple-wise iterations)-.1 E(If `\214ll` is speci\214ed, that will\
 be used to \214ll when we are elements short)110.5 624 Q
(Else Nil will be passed)110.5 636 Q F1([Array] chunks: [Number])87
664.8 Q F0([Array] chunks: [Number] \214ll: [Object])110.5 676.8 Q(mak)
113 688.8 Q(es a b)-.1 E(unch of n-tuples)-.2 E(If `\214ll` is speci\
\214ed, that will be used to \214ll when we are elements short)110.5
700.8 Q(Else Nil will be passed)110.5 712.8 Q 165.955(0.0.6.6 10)72 768
R(December 2017)2.5 E(23)185.955 E 0 Cg EP
%%Page: 24 25
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF
([Array] \342 [Element1] ; [Element2] ; ...)87 84 Q F0(Creates a ne)
110.5 96 Q 2.5(wi)-.25 G(nstance of an array and initializes this)-2.5 E
(array with a \214rst element, useful for literal-lik)110.5 108 Q 2.5
(eA)-.1 G(rray)-2.5 E(notations.)110.5 120 Q(Usage:)110.5 144 Q 2.5(a:)
110.5 168 S 2.5(=A)-2.5 G(rray \342 1 ; 2 ; 3.)-2.5 E
(or if ASCII-only is preferred:)110.5 192 Q 2.5(a:)110.5 216 S 2.5(=A)
-2.5 G(rray < 1 ; 2 ; 3.)-2.5 E
(Note that the ; symbol here is an alias for 'push:'.)110.5 240 Q F1
([Array] unshift: [Element].)87 268.8 Q F0(Unshift operation for array)
110.5 280.8 Q(.)-.65 E(Adds the speci\214ed element to the be)110.5
292.8 Q(ginning of the array)-.15 E(.)-.65 E(Usage:)110.5 316.8 Q 2.5
(a:)110.5 340.8 S 2.5(=A)-2.5 G(rray ne)-2.5 E -.65(w.)-.25 G 2.5(ap)
110.5 352.8 S(ush: 1.)-2.5 E 2.5(au)110.5 364.8 S(nshift: 3. #no)-2.5 E
2.5(wc)-.25 G(ontains: 3,1)-2.5 E F1([Array] r)87 393.6 Q -2.3 -.15
(ev e)-.18 H(rse).15 E([Array] join: [Glue].)87 434.4 Q F0
(Joins the elements of an array together in a string)110.5 446.4 Q
(separated by a speci\214ed glue string.)110.5 458.4 Q(Usage:)110.5
482.4 Q(collection := Array ne)110.5 506.4 Q -.65(w.)-.25 G
(collection push: 1, push: 2, push 3.)110.5 518.4 Q(collection join: ',)
110.5 530.4 Q('. # results in string: '1,2,3')-.7 E F1
([Array] at: [Index])87 559.2 Q F0
(Returns the element in the array at the speci\214ed inde)110.5 571.2 Q
(x.)-.15 E(Note that the \214srt inde)110.5 583.2 Q 2.5(xo)-.15 G 2.5
(ft)-2.5 G(he array is inde)-2.5 E 2.5(x0)-.15 G(.)-2.5 E(Usage:)110.5
607.2 Q(fruits := Array \342 'apples' ; 'oranges' ; 'bananas'.)110.5
631.2 Q(fruits at: 1. #returns 'oranges')110.5 643.2 Q F1
([Array] indexOf: [Object])87 672 Q F0(Returns the inde)110.5 684 Q 2.5
(xo)-.15 G 2.5(ft)-2.5 G(he \214rst occurence of object)-2.5 E
(-1 if not found)110.5 696 Q 165.955(0.0.6.6 10)72 768 R(December 2017)
2.5 E(24)185.955 E 0 Cg EP
%%Page: 25 26
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Array] contains: [Object])87
84 Q F0(Returns whether the array contains the object or not)110.5 96 Q
F1([Array] @ [Index])87 124.8 Q F0(Alias for [Array] at: [Inde)110.5
136.8 Q(x])-.15 E F1([Array] put: [Element] at: [Index])87 165.6 Q F0
(Puts a v)110.5 177.6 Q(alue in the array at the speci\214ed inde)-.25 E
(x.)-.15 E(Array will be automatically e)110.5 189.6 Q
(xpanded if the inde)-.15 E 2.5(xi)-.15 G 2.5(sh)-2.5 G(igher than)-2.5
E(the maximum inde)110.5 201.6 Q 2.5(xo)-.15 G 2.5(ft)-2.5 G(he array)
-2.5 E 2.5(,u)-.65 G(nless the array is immutable)-2.5 E(Usage:)110.5
225.6 Q(fruits := Array ne)110.5 249.6 Q -.65(w.)-.25 G
(fruits put: 'apples' at: 5.)110.5 261.6 Q F1([Array] pop)87 290.4 Q F0
(Pops of)110.5 302.4 Q 2.5(ft)-.25 G(he last element of the array)-2.5 E
(.)-.65 E F1([Array] shift)87 331.2 Q F0(Shifts of)110.5 343.2 Q 2.5(ft)
-.25 G(he \214rst element of the array)-2.5 E(.)-.65 E F1([Array] count)
87 372 Q F0(Returns the number of elements in the array)110.5 384 Q(.)
-.65 E F1([Array] fr)87 412.8 Q(om: [Begin] length: [End])-.18 E F0
(Copies part of an array indicated by from and to and)110.5 424.8 Q
(returns a ne)110.5 436.8 Q 2.5(wa)-.25 G(rray consisting of a cop)-2.5
E 2.5(yo)-.1 G 2.5(ft)-2.5 G(his re)-2.5 E(gion.)-.15 E F1
([Array] skip: [n:Number])87 465.6 Q F0
(Skips the \214rst n elements of the array)110.5 477.6 Q F1 2.5(*[)87
506.4 S(Array] zip)-2.5 E F0 3.902(**z)108 518.4 S 1.402(ip array)-3.902
F 6.402(.*)-.65 G -.8(Wo)-2.5 G 1.401
(rks on the inner elements of the array).8 F 6.401(.*)-.65 G 1.401
(If the element is an array)-2.5 F 3.901(,i)-.65 G 3.901(ti)-3.901 G
3.901(se)-3.901 G(xpanded)-4.051 E -.15(ex)108 530.4 S(actly once.).15 E
2.5(*A)5 G(nd if the element is not an array)-2.5 E 2.5(,i)-.65 G 2.5
(ti)-2.5 G 2.5(su)-2.5 G(sed as-is *)-2.5 E F1([Array] zipW)87 559.2 Q
(ith: [Block])-.18 E F0(zip array according to the return of the block)
110.5 571.2 Q -.8(Wo)110.5 583.2 S
(rks on the inner elements of the array).8 E(.)-.65 E
(If the element is an array)110.5 595.2 Q 2.5(,i)-.65 G 2.5(ti)-2.5 G
2.5(se)-2.5 G(xpanded e)-2.65 E(xactly once.)-.15 E
(And if the element is not an array)110.5 607.2 Q 2.5(,i)-.65 G 2.5(ti)
-2.5 G 2.5(su)-2.5 G(sed as-is)-2.5 E F1([Array] head)87 636 Q F0
(see also \(tail, init, last\))110.5 648 Q
(returns the \214rst element of the array)110.5 672 Q(Does generate e)
110.5 684 Q(xceptions when array is empty)-.15 E 165.955(0.0.6.6 10)72
768 R(December 2017)2.5 E(25)185.955 E 0 Cg EP
%%Page: 26 27
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Array] tail)87 84 Q F0
(see also \(head, init, last\))110.5 96 Q
(returns all of the array sans the \214rst element)110.5 120 Q
(Does not generate e)110.5 132 Q(xceptions when array is empty)-.15 E F1
([Array] init)87 160.8 Q F0(see also \(head, tail, last\))110.5 172.8 Q
(returns all of the array sans the last element)110.5 196.8 Q
(Does not generate e)110.5 208.8 Q(xceptions when array is empty)-.15 E
F1([Array] last)87 237.6 Q F0(see also \(head, tail, init\))110.5 249.6
Q(returns all of the array sans the last element)110.5 273.6 Q
(Does generate e)110.5 285.6 Q(xceptions when array is empty)-.15 E F1
([Array] + [Array])87 314.4 Q F0(Returns a ne)110.5 326.4 Q 2.5(wa)-.25
G(rray)-2.5 E 2.5(,c)-.65 G(ontaining elements of itself and the other)
-2.5 E(array)110.5 338.4 Q(.)-.65 E F1(Array fmap: [Block])87 367.2 Q F0
(Maps a function o)110.5 379.2 Q -.15(ve)-.15 G 2.5(rt).15 G
(he block. this function should accept a single v)-2.5 E(alue.)-.25 E
([1,2,3,4] fmap: {:v ^v + 1.}. #=> Array ne)110.5 403.2 Q 2.5(w<2;3;4;5)
-.25 G F1(Array imap: [Block])87 432 Q F0(Maps a function o)110.5 444 Q
-.15(ve)-.15 G 2.5(rt).15 G
(he block. this function should accept an inde)-2.5 E 2.5(xa)-.15 G
(nd a v)-2.5 E(alue.)-.25 E
([1,2,3,4] imap: {:i:v ^v + i.}. #=> Array ne)110.5 468 Q 2.5(w<1;3;5;7)
-.25 G F1(Array f)87 496.8 Q(oldl: [Block] accumulator: [Object])-.25 E
F0 .239(reduces an array according to a block \(which tak)110.5 508.8 R
.239(es an accumulator and the v)-.1 F .239(alue, and returns the ne)
-.25 F .239(xt acc\))-.15 F(from the left \(inde)108 520.8 Q 2.5(x0)-.15
G(\))-2.5 E(\([1,2,3,4]\) foldl: {:acc:v ^acc + v)110.5 544.8 Q
(.} accumulator: 0. #=> Equi)-.65 E -.25(va)-.25 G
(lent to \([1,2,3,4]\) sum.).25 E F1([Array] \214lter: [Block<i,v>])87
573.6 Q F0(Include the element if)110.5 585.6 Q 2.5(fb)-.25 G
(lock returns T)-2.5 E(rue for the element)-.35 E F1 2.5(*[)87 614.4 S
(Array] unpack: [Array:{Ref:string}])-2.5 E F0 2.5(*E)110.5 626.4 S
(lement-wise assign)-2.5 E F1([Array] sort: [Block])87 655.2 Q F0
(Sorts the contents of an array using a sort block.)110.5 667.2 Q
(Uses qsort.)110.5 679.2 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5
E(26)185.955 E 0 Cg EP
%%Page: 27 28
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Array] toString)87 84 Q F0
(Returns a string representation of the array and its contents.)110.5 96
Q(This representation will be encoded in the Citron language itself and\
 is)110.5 108 Q(therefore e)110.5 120 Q -.25(va)-.25 G(llable.).25 E
(Usage:)110.5 144 Q 2.5(a:)110.5 168 S 2.5(=A)-2.5 G
(rray \342 'hello' ; 'w)-2.5 E(orld'.)-.1 E 2.5(b:)110.5 180 S 2.5(=at)
-2.5 G(oString.)-2.5 E 2.5(c:)110.5 192 S 2.5(=be)-2.5 G -.25(va)-2.75 G
(l.).25 E 2.5(x:)110.5 204 S 2.5(=c@1)-2.5 G 2.5(.#)-2.5 G -.1(wo)-2.5 G
(rld).1 E(toString messages are implicitly send by some objects, for in\
stance when)110.5 228 Q(attempting to write an Array using a Pen.)110.5
240 Q -1.1(Yo)110.5 264 S 2.5(uc)1.1 G(an also use the alias ')-2.5 E
(serialize'.)-.55 E F1([Array] serialize)87 292.8 Q F0
(Alias for [Array] toString.)110.5 304.8 Q
(See 'Map serialize' for the reason for this alias.)110.5 328.8 Q/F2
10.95/Times-Bold@0 SF(Map)110.738 369.6 Q F1(_OBJ_DEF Map)108 381.6 Q
(Map)87 410.4 Q F0(Creates a Map object.)110.5 422.4 Q(Usage:)110.5
446.4 Q(\214les := Map ne)110.5 470.4 Q -.65(w.)-.25 G(\214les put: ')
110.5 482.4 Q(readme.txt' at: ')-.5 E(te)-.18 E(xt\214le'.)-.15 E F1
([Map] type)87 511.2 Q F0(Returns the string 'Map'.)110.5 523.2 Q F1
([Map] put: [Element] at: [K)87 552 Q(ey])-.25 E F0(Puts a k)110.5 564 Q
-.15(ey)-.1 G(-v).15 E(alue pair in a map.)-.25 E(Usage:)110.5 588 Q
(map put: 'hello' at: 'w)110.5 612 Q(orld'.)-.1 E F1([Map] deleteAt: [k)
87 640.8 Q(ey])-.1 E F0(deletes an entry \(Noop if not in the map\))
110.5 652.8 Q(Usage:)110.5 676.8 Q(map deleteAt: 'w)110.5 700.8 Q
(orld'.)-.1 E 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(27)185.955
E 0 Cg EP
%%Page: 28 29
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Map] at: [K)87 84 Q(ey])-.25
E F0(Retrie)110.5 96 Q -.15(ve)-.25 G 2.5(st).15 G(he v)-2.5 E
(alue speci\214ed by the k)-.25 E .3 -.15(ey f)-.1 H(rom the map.).15 E
F1([Map] @ [K)87 124.8 Q(ey])-.25 E F0(Alias for [Map] at: [K)110.5
136.8 Q -.15(ey)-.25 G(].).15 E F1([Map] count)87 165.6 Q F0
(Returns the number of elements in the map.)110.5 177.6 Q F1
([Map] each: [Block])87 206.4 Q F0(Iterates o)110.5 218.4 Q -.15(ve)-.15
G 2.5(rt).15 G(he map, passing k)-2.5 E -.15(ey)-.1 G(-v).15 E
(alue pairs to the speci\214ed block.)-.25 E(Note that within an each/m\
ap block, 'me' and 'my' refer to the collection.)110.5 230.4 Q F1
([Map] fmap: [Block<v)87 259.2 Q(alue>])-.1 E F0(Iterates o)110.5 271.2
Q -.15(ve)-.15 G 2.5(rt).15 G(he map, passing the v)-2.5 E
(alue to the function, and replacing it with the result)-.25 E
(\(Or itself if a v)110.5 283.2 Q(alue is not returned\))-.25 E F1
([Map] kvmap: [Block])87 312 Q F0(Iterates o)110.5 324 Q -.15(ve)-.15 G
2.5(rt).15 G(he map, passing a tuple of [k)-2.5 E -.15(ey)-.1 G 2.5(,v)
-.5 G(alue] to the speci\214ed block.)-2.75 E(And constructs a ne)110.5
336 Q 2.5(wM)-.25 G(ap based of)-2.5 E 2.5(ft)-.25 G
(he returned kv-tuple)-2.5 E(Note that within an each/map block, 'me' a\
nd 'my' refer to the collection.)110.5 348 Q F1([Map] kvlist: [Block])87
376.8 Q F0(Iterates o)110.5 388.8 Q -.15(ve)-.15 G 2.5(rt).15 G
(he map, passing a tuple of [k)-2.5 E -.15(ey)-.1 G 2.5(,v)-.5 G
(alue] to the speci\214ed block.)-2.75 E(And constructs a ne)110.5 400.8
Q 2.5(wl)-.25 G(ist based of)-2.5 E 2.5(ft)-.25 G(he returned kv-tuple)
-2.5 E(Note that within an each/map block, 'me' and 'my' refer to the c\
ollection.)110.5 412.8 Q F1([Map] \215ip)87 441.6 Q F0(\215ips the k)
110.5 453.6 Q -.15(ey)-.1 G 2.5(sa).15 G(nd the v)-2.5 E
(alues of the map. \(same-v)-.25 E(alue k)-.25 E -.15(ey)-.1 G 2.5(sw)
.15 G(ill be o)-2.5 E -.15(ve)-.15 G(rwritten\)).15 E F1([Map] toString)
87 482.4 Q F0
(Returns a string representation of a map encoded in Citron itself.)
110.5 494.4 Q(This will gi)110.5 506.4 Q .3 -.15(ve y)-.25 H(ou an).15 E
-.25(eva)110.5 518.4 S
(llable representation of the map and all of its members.).25 E(Usage)
110.5 542.4 Q 2.5(m:)110.5 566.4 S 2.5(=\()-2.5 G(Map ne)-2.5 E
(w\) put: 'hello' at: 'w)-.25 E(orld'.)-.1 E 2.5(x:)110.5 578.4 S 2.5
(=mt)-2.5 G(oString)-2.5 E 2.5(m:)110.5 590.4 S 2.5(=xe)-2.5 G -.25(va)
-2.75 G(l.).25 E(The toString method is automatically in)110.5 614.4 Q
-.2(vo)-.4 G -.1(ke).2 G 2.5(dw).1 G(hen attempting to)-2.5 E
(print a Map:)110.5 626.4 Q(Pen write: \(Map ne)110.5 650.4 Q
(w\). #prints Map ne)-.25 E -.65(w.)-.25 G -1.1(Yo)110.5 674.4 S 2.5(uc)
1.1 G(an also use the alias ')-2.5 E(serialize'.)-.55 E F1 2.5(*[)87
703.2 S(Map] serialize)-2.5 E F0 3.409(**A)108 715.2 S .909
(lias for [Map] toString.)-3.409 F 3.409(*At)5.909 G .909
(oString message, sometimes implicitly send by other messages lik)-3.409
F 3.408(e*)-.1 G .198('Pen write:' will gi)108 727.2 R .498 -.15(ve y)
-.25 H .198(ou a serialized v).15 F .198(ersion of the Map or Array)-.15
F 5.198(.*)-.65 G .198(This is f)-2.5 F .198(ar more useful than a ')-.1
F(dumb')-.5 E 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(28)185.955
E 0 Cg EP
%%Page: 29 30
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(te)108 84 Q .307
(xtual description of the object lik)-.15 F 2.807(e*')-.1 G .307
(array' or 'object'. Ho)-2.807 F(we)-.25 E -.15(ve)-.25 G 1.107 -.4
(r, w).15 H .307(hen w).4 F .307(orking with v)-.1 F .307(ery lar)-.15 F
.307(ge Maps or)-.18 F 1.387
(Arrays * accidentally dumping the entire contents can be anno)108 96 R
1.388(ying, in this case you can * o)-.1 F -.15(ve)-.15 G 1.388
(rride the).15 F .828(toString beha)108 108 R .828(viour b)-.2 F .828
(ut you don')-.2 F 3.328(th)-.18 G -2.25 -.2(av e)-3.328 H .828
(to remap the original, you * can just use this alias. Also, this alias)
3.528 F(can be used if you w)108 120 Q(ant to mak)-.1 E 2.5(e*t)-.1 G
(he serialization more e)-2.5 E(xplicit.)-.15 E/F1 10/Times-Bold@0 SF
([Map] unpack: [Map:{Ref:string}])87 148.8 Q F0 -2.15 -.25(Ke y)110.5
160.8 T(-wise assign).25 E/F2 10.95/Times-Bold@0 SF(Iterator)110.738
201.6 Q F1(_OBJ_DEF Iterator)108 213.6 Q(Iterator)87 242.4 Q F0
(Iterator \(range\), an object that supports ne)110.5 254.4 Q
(xt and current,)-.15 E(and steps through some v)110.5 266.4 Q
(alues before \(optionally\) reaching an end)-.25 E F1
([Iterator] setFunc: [f:Block])87 295.2 Q F0
(sets the iterator step function.)110.5 307.2 Q F1([Iterator] rangeFr)87
336 Q(om: [f:Number] to: [t:Number] step: [s:Number])-.18 E F0(mak)110.5
348 Q(es a range iterator in range [f,t] with steps of s)-.1 E F1
([Iterator] rangeFr)87 376.8 Q
(om: [f:\(supports +\)] step: [s:\(supports +\)])-.18 E F0(mak)110.5
388.8 Q(es a range iterator in range [f,inf\) with steps of s)-.1 E -.1
(wo)110.5 400.8 S(rks on all objects that support the message '+').1 E
F1([Iterator] next)87 429.6 Q F0(gi)110.5 441.6 Q -.15(ve)-.25 G 2.5(st)
.15 G(he ne)-2.5 E(xt v)-.15 E
(alue or breaks \(to signal the end of the iterator\))-.25 E F1
([Iterator] each: [Block<nil,v)87 470.4 Q(alue,iterator>])-.1 E F0
(Runs the block for each v)110.5 482.4 Q
(alue in the iterator while stepping through it)-.25 E
(Sends Nil for the inde)110.5 494.4 Q(x.)-.15 E F1
([Iterator] each_v: [Block<v)87 523.2 Q(alue>])-.1 E F0
(Runs the block for each v)110.5 535.2 Q
(alue in the iterator while stepping through it)-.25 E F1
([Iterator] fmap: [b:Block<v)87 564 Q(alue>])-.1 E F0(Equi)110.5 576 Q
-.25(va)-.25 G(lent to [Array] fmap: [Block<v).25 E(alue>])-.25 E .326(\
transforms the iterator with the block to another iterator This functio\
n does not e)110.5 600 R -.25(va)-.25 G .326(luate an).25 F .326
(ything from the)-.15 F(iterator)108 612 Q F1
([Iterator] \214lter: [b:Block<nil,v)87 640.8 Q(alue>])-.1 E F0
(XXX XXX XXX :: Unimplemented)110.5 652.8 Q(Equi)110.5 664.8 Q -.25(va)
-.25 G(lent to [Array] \214lter: [Block<inde).25 E(x,v)-.15 E(alue>])
-.25 E(\214lters the iterator with the block')110.5 688.8 Q 2.5(sr)-.55
G(eturn v)-2.5 E(alue as the predicate to an array)-.25 E
(this function does not e)110.5 700.8 Q -.25(va)-.25 G(luate an).25 E
(ything from the iterator)-.15 E(.)-.55 E 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(29)185.955 E 0 Cg EP
%%Page: 30 31
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Iterator] f)87 84 Q
(oldl: [Block] accumulator: [Object])-.25 E F0 .889
(reduces an iterator according to a block \(which tak)110.5 96 R .889
(es an accumulator and the v)-.1 F .888(alue, and returns the ne)-.25 F
(xt)-.15 E(acc\) from the left \(inde)108 108 Q 2.5(x0)-.15 G(\))-2.5 E
F1([Iterator] count)87 136.8 Q F0
(Steps through the iterator until it ends and returns the count.)110.5
148.8 Q(resets the state of the iterator)110.5 160.8 Q F1
([Iterator] tak)87 189.6 Q(e: [t:Number])-.1 E F0(tak)110.5 201.6 Q
(es at most <t> number of elements from the Iterator)-.1 E F1
([Iterator] tak)87 230.4 Q(eWhile: [pr)-.1 E(edicate:Block])-.18 E F0
(tak)110.5 242.4 Q(es v)-.1 E(alues as long as predicate returns true.)
-.25 E F1([Iterator] endBlock)87 271.2 Q F0(returns a block that thro)
110.5 283.2 Q(ws an IteratorEndException.)-.25 E F1
([Iterator] endIf: [clause:Block])87 312 Q F0
(ends the Iterator if clause returns T)110.5 324 Q(rue)-.35 E F1
([Iterator] toArray)87 352.8 Q F0(Collects all of the iterator v)110.5
364.8 Q(alues into an array)-.25 E F1([Iterator] skip: [n:Number])87
393.6 Q F0(skips n iterations and returns the nth v)110.5 405.6 Q(alue)
-.25 E(does not reset the e)110.5 417.6 Q -.25(va)-.25 G
(luation. \(iterator will adv).25 E(ance to inde)-.25 E 2.5(xn)-.15 G
(\))-2.5 E/F2 10.95/Times-Bold@0 SF(File)110.738 458.4 Q F1
(_OBJ_DEF File)108 470.4 Q(File)87 499.2 Q F0(Represents a File object.)
110.5 511.2 Q(Creates a ne)110.5 523.2 Q 2.5<778c>-.25 G
(le object based on the speci\214ed path.)-2.5 E(Usage:)110.5 547.2 Q
(File ne)110.5 571.2 Q(w: '/e)-.25 E(xample/path/to/\214le.txt'.)-.15 E
F1([File] tempFileLik)87 600 Q(e: [String])-.1 E F0
(Represents a File object.)110.5 612 Q(Creates a ne)110.5 624 Q 2.5(wt)
-.25 G(emporary \214le object based on the speci\214ed path.)-2.5 E
(replacing XXXX with some chars.)110.5 636 Q(Usage:)110.5 648 Q
(File tempFileLik)110.5 672 Q(e: '/e)-.1 E
(xample/path/to/\214leXXXXXXXX.txt'.)-.15 E F1([File] path)87 700.8 Q F0
(Returns the path of a \214le. The \214le object will respond to this)
110.5 712.8 Q
(message by returning a string object describing the full path to the)
110.5 724.8 Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(30)185.955
E 0 Cg EP
%%Page: 31 32
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(recipient.)110.5 84 Q/F1 10/Times-Bold@0 SF
([File] r)87 112.8 Q(ealP)-.18 E(ath)-.1 E F0(Returns the real path of \
a \214le. The \214le object will respond to this)110.5 124.8 Q(message \
by returning a string object describing the absolute path to the)110.5
136.8 Q(recipient.)110.5 148.8 Q F1([File] r)87 177.6 Q(ead)-.18 E F0(R\
eads contents of a \214le. Send this message to a \214le to read the en\
tire contents in)110.5 189.6 Q(one go. F)110.5 201.6 Q
(or big \214les you might w)-.15 E
(ant to prefer a streaming approach to a)-.1 E -.2(vo)-.2 G(id).2 E
(memory e)110.5 213.6 Q(xhaustion \(see readBytes etc\).)-.15 E(Usage:)
110.5 237.6 Q(data := File ne)110.5 261.6 Q
(w: '/path/to/mydata.csv', read.)-.25 E(In the e)110.5 285.6 Q
(xample abo)-.15 E .3 -.15(ve w)-.15 H 2.5(er).15 G
(ead the contents of the entire CSV \214le callled mydata.csv)-2.5 E
(in the v)110.5 297.6 Q(ariable called data.)-.25 E F1
([File] write: [String])87 326.4 Q F0(Writes content to a \214le. Send \
this message to a \214le object to write the)110.5 338.4 Q(entire conte\
nts of the speci\214ed string to the \214le in one go. The \214le objec\
t)110.5 350.4 Q(responds to this message for con)110.5 362.4 Q
(vience reasons, ho)-.4 E(we)-.25 E -.15(ve)-.25 G 2.5(rf).15 G
(or big \214les it might)-2.5 E(be a better idea to use the streaming A\
PI if possible \(see readBytes etc.\).)110.5 374.4 Q
(data := '<xml>hello</xml>'.)110.5 398.4 Q(File ne)110.5 410.4 Q
(w: 'myxml.xml', write: data.)-.25 E(In the e)110.5 434.4 Q(xample abo)
-.15 E .3 -.15(ve w)-.15 H 2.5(ew).15 G(rite the XML snippet in v)-2.5 E
(ariable data to a \214le)-.25 E(called myxml.xml in the current w)110.5
446.4 Q(orking directory)-.1 E(.)-.65 E F1([File] append: [String])87
475.2 Q F0(Appends content to a \214le. The \214le object responds to t\
his message lik)110.5 487.2 Q 2.5(ei)-.1 G(t)-2.5 E
(responds to the write-message, ho)110.5 499.2 Q(we)-.25 E -.15(ve)-.25
G 2.5(ri).15 G 2.5(nt)-2.5 G(his case the contents of the string)-2.5 E
(will be appended to the e)110.5 511.2 Q
(xisting content inside the \214le.)-.15 E F1([File] exists)87 540 Q F0
(Returns T)110.5 552 Q(rue if the \214le e)-.35 E(xists and F)-.15 E
(alse otherwise.)-.15 E F1([File] include)87 580.8 Q F0
(Includes the \214le as a piece of e)110.5 592.8 Q -.15(xe)-.15 G
(cutable code.).15 E F1([File] runHer)87 621.6 Q(e)-.18 E F0
(Includes the \214le as a piece of e)110.5 633.6 Q -.15(xe)-.15 G
(cutable code.).15 E F1([File] delete)87 662.4 Q F0(Deletes the \214le.)
110.5 674.4 Q F1([File] size)87 703.2 Q F0
(Returns the size of the \214le.)110.5 715.2 Q 165.955(0.0.6.6 10)72 768
R(December 2017)2.5 E(31)185.955 E 0 Cg EP
%%Page: 32 33
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([File] open: [string])87 84 Q
F0(Open a \214le with using the speci\214ed mode.)110.5 96 Q(Usage:)
110.5 120 Q 2.5(f:)110.5 144 S 2.5(=F)-2.5 G(ile ne)-2.5 E
(w: '/path/to/\214le'.)-.25 E 2.5(fo)110.5 156 S(pen: ')-2.5 E
(r+'. #opens \214le for reading and writing)-.5 E(The e)110.5 180 Q
(xample abo)-.15 E .3 -.15(ve o)-.15 H
(pens the \214le in f for reading and writing.).15 E F1([File] close.)87
208.8 Q F0(Closes the \214le represented by the recipient.)110.5 220.8 Q
(Usage:)110.5 244.8 Q 2.5(f:)110.5 268.8 S 2.5(=F)-2.5 G(ile ne)-2.5 E
(w: '/path/to/\214le.txt'.)-.25 E 2.5(fo)110.5 280.8 S(pen: ')-2.5 E
(r+'.)-.5 E 2.5(fc)110.5 292.8 S(lose.)-2.5 E(The e)110.5 316.8 Q
(xample abo)-.15 E .3 -.15(ve o)-.15 H(pens and closes a \214le.).15 E
F1([File] r)87 345.6 Q(eadBytes: [Number].)-.18 E F0
(Reads a number of bytes from the \214le.)110.5 357.6 Q(Usage:)110.5
381.6 Q 2.5(f:)110.5 405.6 S 2.5(=F)-2.5 G(ile ne)-2.5 E
(w: '/path/to/\214le.txt'.)-.25 E 2.5(fo)110.5 417.6 S(pen: ')-2.5 E
(r+'.)-.5 E 2.5(x:)110.5 429.6 S 2.5(=fr)-2.5 G(eadBytes: 10.)-2.5 E 2.5
(fc)110.5 441.6 S(lose.)-2.5 E(The e)110.5 465.6 Q(xample abo)-.15 E .3
-.15(ve r)-.15 H(eads 10 bytes from the \214le represented by f).15 E
(and puts them in b)110.5 477.6 Q(uf)-.2 E(fer x.)-.25 E F1
([File] writeBytes: [String].)87 506.4 Q F0 -.8(Ta)110.5 518.4 S -.1(ke)
.8 G 2.5(sas).1 G
(tring and writes the bytes in the string to the \214le)-2.5 E
(object. Returns the number of bytes actually written.)110.5 530.4 Q
(Usage:)110.5 554.4 Q 2.5(f:)110.5 578.4 S 2.5(=F)-2.5 G(ile ne)-2.5 E
(w: '/path/to/\214le.txt'.)-.25 E 2.5(fo)110.5 590.4 S(pen: ')-2.5 E
(r+'.)-.5 E 2.5(n:)110.5 602.4 S 2.5(=fw)-2.5 G(riteBytes: 'Hello W)-2.5
E(orld'.)-.8 E 2.5(fc)110.5 614.4 S(lose.)-2.5 E(The e)110.5 638.4 Q
(xample abo)-.15 E .3 -.15(ve w)-.15 H(rites 'Hello W).15 E
(orld' to the speci\214ed \214le as bytes.)-.8 E
(The number of bytes written is returned in v)110.5 650.4 Q(ariable n.)
-.25 E F1([File] seek: [Number].)87 679.2 Q F0(Mo)110.5 691.2 Q -.15(ve)
-.15 G 2.5(st).15 G
(he \214le pointer to the speci\214ed position in the \214le)-2.5 E
(\(relati)110.5 703.2 Q .3 -.15(ve t)-.25 H 2.5(ot).15 G
(he current position\).)-2.5 E(Usage:)110.5 727.2 Q 165.955(0.0.6.6 10)
72 768 R(December 2017)2.5 E(32)185.955 E 0 Cg EP
%%Page: 33 34
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(\214le open: ')110.5 84 Q(r', seek: 10.)-.5 E(The e)
110.5 108 Q(xample abo)-.15 E .3 -.15(ve o)-.15 H
(pens a \214le for reading and mo).15 E -.15(ve)-.15 G 2.5(st).15 G(he)
-2.5 E(pointer to position 10 \(meaning 10 bytes from the be)110.5 120 Q
(ginning of the \214le\).)-.15 E(The seek v)110.5 132 Q(alue may be ne)
-.25 E -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G(.).15 E/F1 10/Times-Bold@0
SF([File] r)87 160.8 Q(ewind.)-.18 E F0(Re)110.5 172.8 Q
(winds the \214le. Mo)-.25 E -.15(ve)-.15 G 2.5(st).15 G
(he \214le pointer to the be)-2.5 E(ginning of the \214le.)-.15 E
(Usage:)110.5 196.8 Q(\214le open: ')110.5 220.8 Q(r'.)-.5 E 2.5(x:)
110.5 232.8 S 2.5<3d8c>-2.5 G(le readBytes: 10. #read 10 bytes)-2.5 E
(\214le re)110.5 244.8 Q 17.5(wind. #re)-.25 F(wind, set pointer to be)
-.25 E(gin ag)-.15 E(ain)-.05 E 2.5(y:)110.5 256.8 S 2.5<3d8c>-2.5 G
(le readBytes: 10. #re-read same 10 bytes)-2.5 E(The e)110.5 280.8 Q
(xample abo)-.15 E .3 -.15(ve r)-.15 H
(eads the same sequence of 10 bytes twice, resulting).15 E(in v)110.5
292.8 Q(ariable x and y being equal.)-.25 E F1([File] end.)87 321.6 Q F0
(Mo)110.5 333.6 Q -.15(ve)-.15 G 2.5(st).15 G(he \214le pointer to the \
end of the \214le. Use this in combination with)-2.5 E(ne)110.5 345.6 Q
-.05(ga)-.15 G(ti).05 E .3 -.15(ve s)-.25 H(eek operations.).15 E
(Usage:)110.5 369.6 Q(\214le open: ')110.5 393.6 Q(r'.)-.5 E
(\214le end.)110.5 405.6 Q 2.5(x:)110.5 417.6 S 2.5<3d8c>-2.5 G
(le seek: -10, readBytes: 10.)-2.5 E(The e)110.5 441.6 Q(xample abo)-.15
E .3 -.15(ve w)-.15 H(ill read the last 10 bytes of the \214le. This is)
.15 E(accomplished by \214rst mo)110.5 453.6 Q
(ving the \214le pointer to the end of the \214le,)-.15 E
(then putting it back 10 bytes \(ne)110.5 465.6 Q -.05(ga)-.15 G(ti).05
E .3 -.15(ve n)-.25 H(umber\), and then reading 10).15 E(bytes.)110.5
477.6 Q/F2 10.95/Times-Bold@0 SF(Br)110.738 518.4 Q(oom)-.197 E F1
(_OBJ_DEF Br)108 530.4 Q(oom)-.18 E(Br)87 559.2 Q(oom)-.18 E F0
(GarbageCollector)110.5 571.2 Q 2.5(,t)-.4 G 2.5(oi)-2.5 G -1.9 -.4
(nv o)-2.5 H .2 -.1(ke u).4 H(se:).1 E([Broom] sweep.)110.5 595.2 Q F1
([Br)87 624 Q(oom] dust)-.18 E F0
(Returns the number of objects collected.)110.5 636 Q F1([Br)87 664.8 Q
(oom] objectCount)-.18 E F0
(Returns the total number of objects considered in the latest collect)
110.5 676.8 Q -.15(cy)110.5 688.8 S(cle.).15 E 165.955(0.0.6.6 10)72 768
R(December 2017)2.5 E(33)185.955 E 0 Cg EP
%%Page: 34 35
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Br)87 84 Q(oom] k)-.18 E
(eptCount)-.1 E F0(Returns the total number of objects that ha)110.5 96
Q .3 -.15(ve b)-.2 H(een mark).15 E(ed during the)-.1 E(latest c)110.5
108 Q(ycle and ha)-.15 E .3 -.15(ve t)-.2 H(herefore been allo).15 E
(wed to stay in memory)-.25 E(.)-.65 E F1([Br)87 136.8 Q(oom] k)-.18 E
(eptAlloc)-.1 E F0(Returns the amount of allocated memory)110.5 148.8 Q
(.)-.65 E F1([Br)87 177.6 Q(oom] stick)-.18 E(yCount)-.15 E F0
(Returns the total number of objects that ha)110.5 189.6 Q .3 -.15
(ve a s)-.2 H(tick).15 E 2.5<798d>-.15 G(ag.)-2.5 E
(These objects will ne)110.5 201.6 Q -.15(ve)-.25 G 2.5(rb).15 G 2.5(er)
-2.5 G(emo)-2.5 E -.15(ve)-.15 G(d.).15 E F1([Br)87 230.4 Q
(oom] memoryLimit)-.18 E F0(Sets the memory limit, if this limit gets e)
110.5 242.4 Q(xceeded the program will produce)-.15 E
(an out-of-memory error)110.5 254.4 Q(.)-.55 E F1([Br)87 283.2 Q
(oom] mode: [Number])-.18 E F0(Selects mode of operation for GC.)110.5
295.2 Q -1.27 -.74(Av a)110.5 319.2 T(ilable Modes:).74 E 2.5(0-N)110.5
331.2 S 2.5(oG)-2.5 G(arbage Collection)-2.5 E 2.5(1-A)110.5 343.2 S
(cti)-2.5 E -.25(va)-.25 G(te Garbage Collector).25 E 2.5(4-A)110.5
355.2 S(cti)-2.5 E -.25(va)-.25 G(te Garbage Collector for e).25 E -.15
(ve)-.25 G(ry single step \(testing only\)).15 E F1([Br)87 384 Q
(oom] autoAlloc: [Boolean])-.18 E F0(Set whether the max allo)110.5 396
Q(wed memory cap is enforced or not)-.25 E/F2 10.95/Times-Bold@0 SF
(Shell)110.738 436.8 Q F1(_OBJ_DEF Shell)108 448.8 Q
([Shell] call: [String])87 477.6 Q F0(Performs a Shell operation. The S\
hell object uses a \215uid API, so you can)110.5 489.6 Q
(mix shell code with programming logic. F)110.5 501.6 Q
(or instance to list the contents)-.15 E(of a directory use:)110.5 513.6
Q(Shell ls)110.5 537.6 Q(This will output the contents of the current w)
110.5 561.6 Q(orking directly)-.1 E 2.5(,y)-.65 G(ou)-2.5 E
(can also pass k)110.5 573.6 Q -.15(ey)-.1 G -.1(wo).15 G
(rd messages lik).1 E 2.5(es)-.1 G(o:)-2.5 E
(Shell echo: 'Hello from the Shell!'.)110.5 597.6 Q(The e)110.5 621.6 Q
(xample abo)-.15 E .3 -.15(ve w)-.15 H
(ill output the speci\214ed message to the console.).15 E(Ev)110.5 633.6
Q(ery message you send will be turned into a string and dispatched to)
-.15 E(the 'call:' message.)110.5 645.6 Q F2(Slur)110.738 686.4 Q(p)-.11
E F1(_OBJ_DEF Slur)108 698.4 Q(p)-.1 E F0 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(34)185.955 E 0 Cg EP
%%Page: 35 36
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Slur)87 84 Q(p] obtain.)-.1 E
F0(Obtains the string generated using the Slurp object.)110.5 96 Q 2.5
(AS)110.5 108 S
(lurp object collects all messages send to it and \215ushes its b)-2.5 E
(uf)-.2 E(fer while)-.25 E(returning the resulting string after an 'obt\
ain' message has been recei)110.5 120 Q -.15(ve)-.25 G(d.).15 E(Usage:)
110.5 144 Q(Slurp hello w)110.5 168 Q(orld.)-.1 E
(Pen write: \(Slurp obtain\).)110.5 180 Q(This will output: 'hello w)
110.5 204 Q(orld'.)-.1 E(Use the Slurp object to inte)110.5 216 Q
(grate v)-.15 E(erbose shell commands, other programming languages)-.15
E(\(lik)110.5 228 Q 2.5(eS)-.1 G
(QL\) etc into your main program without o)-2.5 E -.15(ve)-.15 G
(rusing strings.).15 E(Example:)110.5 252 Q
(query select: '*', from users where: 'id = 2'.)110.5 276 Q
(Note that we can')110.5 300 Q 2.5(tu)-.18 G
(se the = and * unfortunately right no)-2.5 E(w)-.25 E
(because = is also a method in the main object. While * can be used)
110.5 312 Q(theoretically)110.5 324 Q 2.5(,i)-.65 G 2.5(te)-2.5 G
(xpects an identi\214er)-2.65 E 2.5(,a)-.4 G(nd 'from' is not a real)
-2.5 E(identi\214er)110.5 336 Q 2.5(,i)-.4 G(t')-2.5 E 2.5(sj)-.55 G
(ust another unary message, so instead of using a binary)-2.5 E 2.5(*w)
110.5 348 S 2.5(es)-2.5 G(imply use a k)-2.5 E -.15(ey)-.1 G -.1(wo).15
G(rd message select: with ar).1 E(gument '*' and then)-.18 E
(proceed our SQL query with a comma \(,\) to chain the rest.)110.5 360 Q
(This is an artif)110.5 372 Q(act of the f)-.1 E
(act that the DSL has to be embedded within)-.1 E
(the language of Citron. Ho)110.5 384 Q(we)-.25 E -.15(ve)-.25 G 2.5(re)
.15 G -.15(ve)-2.75 G 2.5(nw).15 G
(ith these restrictions \(some of which might be)-2.5 E(alle)110.5 396 Q
(viated in future v)-.25 E(ersions\) it')-.15 E 2.5(sq)-.55 G
(uite comfortable and readable to interwea)-2.5 E -.15(ve)-.2 G(an e)
110.5 408 Q(xternal language in your Citron script code.)-.15 E/F2 10.95
/Times-Bold@0 SF(Pr)110.738 448.8 Q(ogram)-.197 E F1(_OBJ_DEF Pr)108
460.8 Q(ogram)-.18 E([Pr)87 489.6 Q(ogram] ar)-.18 E(gument: [Number])
-.1 E F0(Obtains an ar)110.5 501.6 Q(gument from the CLI in)-.18 E -.2
(vo)-.4 G(cation.).2 E F1([Pr)87 530.4 Q(ogram] ar)-.18 E(gCount)-.1 E
F0(Returns the number of CLI ar)110.5 542.4 Q
(guments passed to the script.)-.18 E F1([Pr)87 571.2 Q(ogram] exit)-.18
E F0(Exits program immediately)110.5 583.2 Q(.)-.65 E F1([Pr)87 612 Q
(ogram] en)-.18 E(v: [String])-.4 E F0(Returns the v)110.5 624 Q
(alue of an en)-.25 E(vironment v)-.4 E(ariable.)-.25 E(Usage:)110.5 648
Q 2.5(x:)110.5 672 S 2.5(=C)-2.5 G(ommand en)-2.5 E(v: 'MY_P)-.4 E -1.11
(AT)-.92 G(H_V)1.11 E(AR'.)-1.35 E F1([Pr)87 700.8 Q(ogram] en)-.18 E
(v: [K)-.4 E(ey] v)-.25 E(al: [V)-.1 E(alue])-.92 E F0(Sets the v)110.5
712.8 Q(alue of an en)-.25 E(vironment v)-.4 E(ariable.)-.25 E 165.955
(0.0.6.6 10)72 768 R(December 2017)2.5 E(35)185.955 E 0 Cg EP
%%Page: 36 37
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Pr)87 84 Q(ogram] changeDir)
-.18 E(ectory: [path:String])-.18 E F0
(chdir to path, returns the past directory on success)110.5 96 Q F1([Pr)
87 124.8 Q(ogram] waitF)-.18 E(orInput)-.25 E F0
(Ask a question on the command-line, resumes program)110.5 136.8 Q
(only after pressing the enter k)110.5 148.8 Q -.15(ey)-.1 G(.)-.5 E
(Only reads up to 100 characters.)110.5 160.8 Q(Usage:)110.5 184.8 Q
(Pen write: 'What is your name ?'.)110.5 208.8 Q 2.5(x:)110.5 220.8 S
2.5(=C)-2.5 G(ommand w)-2.5 E(aitF)-.1 E(orInput.)-.15 E
(Pen write: 'Hello ' + x + ' !', brk.)110.5 232.8 Q(The e)110.5 256.8 Q
(xample abo)-.15 E .3 -.15(ve a)-.15 H
(sks the user for his/her name and).15 E(then displays the input recei)
110.5 268.8 Q -.15(ve)-.25 G(d.).15 E F1([Pr)87 297.6 Q
(ogram] getCharacter)-.18 E F0(reads a character from STDIN.)110.5 309.6
Q -.4(Wi)110.5 321.6 S
(ll only return after reading one ASCII character and a return.).4 E F1
([Pr)87 350.4 Q(ogram] input.)-.18 E F0(Reads all ra)110.5 362.4 Q 2.5
(wi)-.15 G(nput from STDIN.)-2.5 E(Usage \(for instance to read ra)110.5
386.4 Q 2.5(wC)-.15 G(GI post\):)-2.5 E(post := Program input.)110.5
410.4 Q F1([Pr)87 439.2 Q(ogram] f)-.18 E(orbidShell)-.25 E F0
(This method is part of the security pro\214les feature of Citron.)110.5
451.2 Q(This will forbid the program to e)110.5 463.2 Q -.15(xe)-.15 G
(cute an).15 E 2.5(ys)-.15 G(hell operations. All)-2.5 E -.15(ex)110.5
475.2 S(ternal libraries and plugins are assumed to respect this settin\
g as well.).15 E(Usage:)110.5 499.2 Q(Program forbidShell.)110.5 523.2 Q
F1([Pr)87 552 Q(ogram] f)-.18 E(orbidFileWrite)-.25 E F0
(This method is part of the security pro\214les feature of Citron.)110.5
564 Q(This will forbid the program to modify)110.5 576 Q 2.5(,c)-.65 G
(reate or delete an)-2.5 E 2.5<798c>-.15 G(les. All)-2.5 E -.15(ex)110.5
588 S(ternal libraries and plugins are assumed to respect this setting \
as well.).15 E(Usage:)110.5 612 Q(Program forbidFileWrite.)110.5 636 Q
F1([Pr)87 664.8 Q(ogram] f)-.18 E(orbidFileRead)-.25 E F0
(This method is part of the security pro\214les feature of Citron.)110.5
676.8 Q(This will forbid the program to read an)110.5 688.8 Q 2.5<798c>
-.15 G(les. In f)-2.5 E(act this will pre)-.1 E -.15(ve)-.25 G
(nt you from).15 E(creating the \214le object at all.)110.5 700.8 Q
(This will also pre)110.5 712.8 Q -.15(ve)-.25 G(nt you from reading en)
.15 E(vironment v)-.4 E(ariables.)-.25 E(All e)110.5 724.8 Q(xternal li\
braries and plugins are assumed to respect this setting as well.)-.15 E
165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(36)185.955 E 0 Cg EP
%%Page: 37 38
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E -.15(Fo)110.5 84 S
(rbidding a program to read \214les also has the ef).15 E
(fect to forbid including other)-.25 E(source \214les.)110.5 96 Q
(Usage:)110.5 120 Q(Program forbidFileRead.)110.5 144 Q/F1 10
/Times-Bold@0 SF([Pr)87 172.8 Q(ogram] f)-.18 E(orbidInclude)-.25 E F0
(This method is part of the security pro\214les feature of Citron.)110.5
184.8 Q(This will forbid the program to include an)110.5 196.8 Q 2.5(yo)
-.15 G(ther \214les. All)-2.5 E -.15(ex)110.5 208.8 S(ternal libraries \
and plugins are assumed to respect this setting as well.).15 E(Usage:)
110.5 232.8 Q(Program forbidInclude.)110.5 256.8 Q F1([Pr)87 285.6 Q
(ogram] f)-.18 E(orbidF)-.25 E(ork.)-.25 E([Pr)87 326.4 Q(ogram] r)-.18
E(emainingMessages: [Number])-.18 E F0
(This method is part of the security pro\214les feature of Citron.)110.5
338.4 Q(This will initiate a countdo)110.5 350.4 Q
(wn for the program, you can specify the maximum quota of)-.25 E
(messages the program may process, once this quota has been e)110.5
362.4 Q(xhausted the program will)-.15 E(be killed entirely \(no e)110.5
374.4 Q(xception\).)-.15 E(Usage:)110.5 398.4 Q
(Program remainingMessages: 100.)110.5 422.4 Q F1([Pr)87 451.2 Q
(ogram] \215ush.)-.18 E F0(Flushes the STDOUT output b)110.5 463.2 Q(uf)
-.2 E(fer)-.25 E(.)-.55 E F1([Pr)87 492 Q(ogram] new: [Block].)-.18 E F0
-.15(Fo)110.5 504 S(rks the program into tw).15 E 2.5(op)-.1 G(rograms.)
-2.5 E(Creates another program that will run at the same time as the)
110.5 516 Q
(current program. Both the parent and the child will obtain a reference)
110.5 528 Q(to the ne)110.5 540 Q
(wly created program. The child will obtain a reference to)-.25 E
(itself passed as a parameter to the code block while the parent will)
110.5 552 Q(obtain its v)110.5 564 Q
(ersion of the program instance as the return v)-.15 E(alue of the)-.25
E(ne)110.5 576 Q(w: message.)-.25 E(Note that spa)110.5 600 Q
(wning a ne)-.15 E 2.5(wp)-.25 G(rogram will leak memory)-2.5 E(.)-.65 E
(The \214le descriptors used to setup communication between parent and)
110.5 612 Q(child will be remo)110.5 624 Q -.15(ve)-.15 G 2.5(dw).15 G
(hen the main program ends b)-2.5 E(ut an)-.2 E 2.5(yn)-.15 G -.25(ew)
-2.5 G(ly created).25 E
(program will add a descriptor pair to the set. This is a limitation)
110.5 636 Q(in the current implementation.)110.5 648 Q(Usage:)110.5 672
Q(child := Program ne)110.5 696 Q(w: { :program)-.25 E
(Pen write: 'Child', brk.)144 708 Q(}.)110.5 720 Q 165.955(0.0.6.6 10)72
768 R(December 2017)2.5 E(37)185.955 E 0 Cg EP
%%Page: 38 39
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(Pen write: 'P)110.5 84 Q(arent'.)-.15 E/F1 10
/Times-Bold@0 SF([Pr)87 112.8 Q(ogram] message: [String].)-.18 E F0
(Sends a message to another program, i.e. a child or a parent that is)
110.5 124.8 Q(running at the same time.)110.5 136.8 Q F1([Pr)87 165.6 Q
(ogram] listen: [Block].)-.18 E F0(Stops the current \215o)110.5 177.6 Q
2.5(wo)-.25 G 2.5(ft)-2.5 G(he program and starts listening for)-2.5 E
(messages from other programs that are running at the same time.)110.5
189.6 Q(Upon recei)110.5 201.6 Q
(ving a message, the speci\214ed block will be in)-.25 E -.2(vo)-.4 G
(cated).2 E(and passed the message that has been recei)110.5 213.6 Q
-.15(ve)-.25 G(d.).15 E F1([Pr)87 242.4 Q(ogram] join)-.18 E F0
(Rejoins the program with the main program.)110.5 254.4 Q
(This message will cause the current program to stop and w)110.5 266.4 Q
(ait)-.1 E(for the child program to end.)110.5 278.4 Q F1([Object] fr)87
307.2 Q(omComputer: [String] [port: [Number] [inet6: [Boolean]]])-.18 E
F0(Creates a remote object from the serv)110.5 319.2 Q
(er speci\214ed by the)-.15 E(ip address.)110.5 331.2 Q F1([Pr)87 360 Q
(ogram] port: [Number].)-.18 E F0
(Sets the port to use for remote connections.)110.5 372 Q F1([Pr)87
400.8 Q(ogram] connectionLimit: [Number].)-.18 E F0
(Sets the maximum number of connections and requests that will be)110.5
412.8 Q(accepted by the current program.)110.5 424.8 Q F1([Pr)87 453.6 Q
(ogram] ser)-.18 E -.1(ve)-.1 G 2.5(:[).1 G(Object].)-2.5 E F0(Serv)
110.5 465.6 Q(es an object. Client programs can no)-.15 E 2.5(wc)-.25 G
(ommunicate with this object)-2.5 E(and send messages to it.)110.5 477.6
Q/F2 10.95/Times-Bold@0 SF(Dice)110.738 518.4 Q F1(_OBJ_DEF Dice)108
530.4 Q([Dice] r)87 559.2 Q(ollW)-.18 E(ithSides: [Number])-.18 E F0
(Rolls the dice, generates a pseudo random number)110.5 571.2 Q(.)-.55 E
F1([Dice] r)87 600 Q(oll)-.18 E F0(Rolls a standard dice with 6 sides.)
110.5 612 Q F1([Dice] rawRandomNumber)87 640.8 Q F0
(Generates a random number)110.5 652.8 Q 2.5(,t)-.4 G(he traditional w)
-2.5 E(ay \(lik)-.1 E 2.5(er)-.1 G(and\(\)\).)-2.5 E F2(Clock)110.738
693.6 Q F1(_OBJ_DEF Clock)108 705.6 Q F0 165.955(0.0.6.6 10)72 768 R
(December 2017)2.5 E(38)185.955 E 0 Cg EP
%%Page: 39 40
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Clock] wait: [Number])87 84 Q
F0 -.8(Wa)110.5 96 S(its X useconds.).8 E F1([Clock] new: [Number].)87
124.8 Q F0(Creates a ne)110.5 136.8 Q 2.5(wc)-.25 G
(lock instance from a UNIX time stamp.)-2.5 E F1([Clock] lik)87 165.6 Q
(e: [Clock])-.1 E F0
(Syncs a clock. Copies the time AND zone from the other clock.)110.5
177.6 Q(Usage:)110.5 201.6 Q(clock := Clock ne)110.5 213.6 Q
(w: timeStamp.)-.25 E(cop)110.5 225.6 Q(yClock := Clock ne)-.1 E 2.5(wl)
-.25 G(ik)-2.5 E(e: clock.)-.1 E F1([Clock] zone: [String])87 254.4 Q F0
(Sets the time zone of the clock.)110.5 266.4 Q F1([Clock] zone)87 295.2
Q F0(Returns time zone of the clock.)110.5 307.2 Q F1
([Clock] zone: [Number])87 336 Q F0(Sets the year of the clock.)110.5
348 Q F1([Clock] zone: [Number])87 376.8 Q F0
(Sets the month of the clock.)110.5 388.8 Q F1([Clock] zone: [Number])87
417.6 Q F0(Sets the day of the clock.)110.5 429.6 Q F1
([Clock] zone: [Number])87 458.4 Q F0(Sets the hour of the clock.)110.5
470.4 Q F1([Clock] zone: [Number])87 499.2 Q F0
(Sets the minute of the clock.)110.5 511.2 Q F1([Clock] zone: [Number])
87 540 Q F0(Sets the second of the clock.)110.5 552 Q F1([Clock] y)87
580.8 Q(ear)-.1 E F0(Returns year of the clock.)110.5 592.8 Q F1
([Clock] month)87 621.6 Q F0(Returns month of the clock.)110.5 633.6 Q
F1([Clock] day)87 662.4 Q F0(Returns day of the clock.)110.5 674.4 Q F1
([Clock] hour)87 703.2 Q F0(Returns hour of the clock.)110.5 715.2 Q
165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(39)185.955 E 0 Cg EP
%%Page: 40 41
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Clock] minute)87 84 Q F0
(Returns minute of the clock.)110.5 96 Q F1([Clock] second)87 124.8 Q F0
(Returns second of the clock.)110.5 136.8 Q F1([Clock] y)87 165.6 Q
(earday)-.1 E F0(Returns day number of the year)110.5 177.6 Q(.)-.55 E
F1([Clock] weekday)87 206.4 Q F0
(Returns the week day number of the clock.)110.5 218.4 Q F1
([Clock] time.)87 247.2 Q F0
(Returns the UNIX time stamp representation of the time.)110.5 259.2 Q
(Note: this is the time OF CREA)110.5 271.2 Q(TION OF THE OBJECT)-1.11 E
2.5(.T)-.74 G 2.5(og)-3.3 G(et the actual time use:)-2.5 E([Clock] ne)
110.5 295.2 Q 2.5(wt)-.25 G(ime.)-2.5 E F1([Clock] week)87 324 Q F0
(Returns the week number of the clock.)110.5 336 Q F1([Clock] f)87 364.8
Q(ormat: [String])-.25 E F0(Returns a string describing the date and ti\
me represented by the clock object)110.5 376.8 Q(according to the speci\
\214ed format. See strftime for format syntax details.)110.5 388.8 Q F1
([Clock] toString)87 417.6 Q F0
(Returns a string describing the date and time)110.5 429.6 Q
(represented by the clock object.)110.5 441.6 Q F1
([Clock] add: [Number].)87 470.4 Q F0
(Adds the number to the clock, updating its time accordingly)110.5 482.4
Q(.)-.65 E(Note that this is typically used with a quali\214er)110.5
494.4 Q(.)-.55 E
(If the quali\214er is 'hours' the number is treated as hours and)110.5
506.4 Q(the speci\214ed number of hours will be added to the time.)110.5
518.4 Q(The Clock object understands the follo)110.5 542.4 Q
(wing quali\214ers)-.25 E(if the selected language is English:)110.5
554.4 Q(sec, second, seconds,)110.5 578.4 Q(min, minute, minutes,)110.5
590.4 Q(hrs, hour)110.5 602.4 Q 2.5(,h)-.4 G(ours,)-2.5 E(day)110.5
614.4 Q 2.5(,d)-.65 G(ays,)-2.5 E(week, weeks,)110.5 626.4 Q
(month, months,)110.5 638.4 Q(year)110.5 650.4 Q 2.5(,y)-.4 G(ears)-2.5
E(Note that it does not matter which form you use, 2 hour means)110.5
674.4 Q(the same as 2 hours \(plural\).)110.5 686.4 Q(Usage:)110.5 710.4
Q 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(40)185.955 E 0 Cg EP
%%Page: 41 42
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E(clock add: 3 minutes. #adds 3 minutes)110.5 84 Q
(clock add: 1 hour)110.5 96 Q 10(.#)-.55 G(adds 1 hour)-10 E
(clock add: 2 second.)110.5 108 Q(#adds 2 seconds)5 E/F1 10/Times-Bold@0
SF([Clock] subtract: [Number].)87 136.8 Q F0(Same as '[Clock] add:' b)
110.5 148.8 Q(ut subtracts the number instead of adding it to)-.2 E
(the clock')110.5 160.8 Q 2.5(st)-.55 G(ime.)-2.5 E F1([Clock] new)87
189.6 Q F0(Creates a ne)110.5 201.6 Q 2.5(wc)-.25 G(lock, by def)-2.5 E
(ault a clock will be set to)-.1 E(the UTC timezone ha)110.5 213.6 Q
(ving the current time.)-.2 E F1([Clock] pr)87 242.4 Q(ocessorClock)-.18
E F0(returns the number of processor ticks since the be)110.5 254.4 Q
(ginning of this program.)-.15 E
(Note that this will be reset depending on the processor)110.5 266.4 Q
F1([Clock] ticksP)87 295.2 Q(erSecond)-.2 E F0
(returns the count of processor ticks in a second)110.5 307.2 Q F1
([Clock] timeExecutionOf: [Block])87 336 Q F0(Ho)110.5 348 Q 2.5(wl)-.25
G(ong does the e)-2.5 E -.15(xe)-.15 G(cution of the block tak).15 E
(e? \(returns in cpu ticks\))-.1 E F1([Clock] executionSeconds: [Block])
87 376.8 Q F0(Ho)110.5 388.8 Q 2.5(wl)-.25 G(ong does the e)-2.5 E -.15
(xe)-.15 G(cution of the block tak).15 E(e? \(returns in seconds\))-.1 E
/F2 10.95/Times-Bold@0 SF -.219(Pe)110.738 429.6 S(n).219 E F1
(_OBJ_DEF P)108 441.6 Q(en)-.2 E([P)87 470.4 Q(en] write: [String])-.2 E
F0(Writes string to console.)110.5 482.4 Q F1([P)87 511.2 Q
(en] writeln: [String])-.2 E F0(Writes string to console, with a ne)
110.5 523.2 Q(wline at the end.)-.25 E F1([P)87 552 Q(en] brk)-.2 E F0
(Outputs a ne)110.5 564 Q(wline character)-.25 E(.)-.55 E F2(Re\215ect)
110.738 604.8 Q F1(_OBJ_DEF Re\215ect)108 616.8 Q(Re\215ect addGlobalV)
87 645.6 Q(ariable: [name:String])-.92 E F0(adds a v)110.5 657.6 Q
(ariable named <name> to the global conte)-.25 E(xt)-.15 E F1
(Re\215ect addLocalV)87 686.4 Q(ariable: [name:String])-.92 E F0
(adds a v)110.5 698.4 Q(ariable named <name> to the Local conte)-.25 E
(xt)-.15 E 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E(41)185.955 E
0 Cg EP
%%Page: 42 43
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF(Re\215ect addPri)87 84 Q -.1
(va)-.1 G(teV).1 E(ariable: [name:String])-.92 E F0(adds a v)110.5 96 Q
(ariable named <name> to this conte)-.25 E(xt)-.15 E F1
(Re\215ect set: [name:String] to: [Object])87 124.8 Q F0
(dynamically sets a binding)110.5 136.8 Q F1(Re\215ect getContext)87
165.6 Q F0(returns all the conte)110.5 177.6 Q(xt k)-.15 E -.15(ey)-.1 G
(s).15 E F1(Re\215ect getMethodsOf: [Object])87 206.4 Q F0
(returns all the method names of object)110.5 218.4 Q F1
(Re\215ect getPr)87 247.2 Q(opertiesOf: [Object])-.18 E F0
(returns all the property names of object)110.5 259.2 Q F1
([Re\215ect] getObject: [s:String])87 288 Q F0
(looks for the object `s` in the current conte)110.5 300 Q(xt or an)-.15
E 2.5(yo)-.15 G 2.5(ft)-2.5 G(he conte)-2.5 E(xts beneath)-.15 E F1
([Re\215ect] objectExists: [Object])87 328.8 Q F0
(returns whether the object e)110.5 340.8 Q(xists)-.15 E F1
([Re\215ect] addAr)87 369.6 Q(gumentT)-.1 E
(o: [Block] named: [s:String])-.92 E F0(adds a ne)110.5 381.6 Q 2.5(wa)
-.25 G -.18(rg)-2.5 G(ument `s` to the block).18 E F1
([Re\215ect] copyBlock: [b:Block])87 410.4 Q F0(copies block b to a ne)
110.5 422.4 Q 2.5(wc)-.25 G(onte)-2.5 E(xt)-.15 E F1
([Re\215ect] newShar)87 451.2 Q(edObject)-.18 E F0(mak)110.5 463.2 Q
(es a memmapped object. \(Automatic destructor e)-.1 E(xists\))-.15 E F1
([Re\215ect] link: [o:Object] to: [p:Object])87 492 Q F0
(casts o to object type p)110.5 504 Q F1
([Re\215ect] objectExists: [o:String])87 532.8 Q F0
(checks whether the object named o e)110.5 544.8 Q(xists)-.15 E F1
([Re\215ect] isObject: [o:Object] link)87 573.6 Q(edT)-.1 E
(o: [p:Object])-.92 E F0(checks whether p is an)110.5 585.6 Q
(ywhere in o')-.15 E 2.5(sl)-.55 G(ink chain)-2.5 E F1
([Re\215ect] isObject: [o:Object] childOf: [p:Object])87 614.4 Q F0
(returns whether p is the parent of o)110.5 626.4 Q F1
([Re\215ect] generateLinkT)87 655.2 Q -.18(re)-.74 G(e: [o:Object]).18 E
F0(generates a linear tree, representing the chain of inheritance for o\
bject o)110.5 667.2 Q F1([Re\215ect] primiti)87 696 Q -.1(ve)-.1 G
(LinkOf: [o:Object]).1 E F0(gets the \214rst primiti)110.5 708 Q .3 -.15
(ve o)-.25 H(bject associated with o in its link chain).15 E 165.955
(0.0.6.6 10)72 768 R(December 2017)2.5 E(42)185.955 E 0 Cg EP
%%Page: 43 44
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10/Times-Bold@0 SF([Re\215ect] typeOf: [Object])
87 84 Q F0(returns a type constructor suited for the object)110.5 96 Q
F1([Re\215ect] par)87 124.8 Q(entOf: [o:Object])-.18 E F0
(gets the \214rst immediate parent of o.)110.5 136.8 Q F1
([Re\215ect] getResponder: [r:String] ofObject: [o:Object])87 165.6 Q F0
(gets the method r from object o, AS IS)110.5 177.6 Q
(The returned block will not contain an)110.5 189.6 Q 2.5(yr)-.15 G
(eferences to o.)-2.5 E(So a conte)110.5 201.6 Q
(xt must be supplied. \(T)-.15 E(ak)-.8 E(es a ')-.1 E -1.95(self ')-.55
F(ar)2.5 E(gument \214rst\))-.18 E F1([Re\215ect] run: [Block] f)87
230.4 Q(orObject: [object:Object] ar)-.25 E(guments: [Array])-.1 E F0
(runs a block with its 'me'/'my' set to object)110.5 242.4 Q F1
([Re\215ect] runHer)87 271.2 Q(e: [Block] f)-.18 E
(orObject: [o:Object] ar)-.25 E(guments: [Array])-.1 E F0
(runs a block with its 'me'/'my' set to object, without switching conte)
110.5 283.2 Q(xts)-.15 E F1([Re\215ect] closur)87 312 Q
(e: [String] of: [Object])-.18 E F0
(captures a method from an object as a closure)110.5 324 Q
(\(Re\215ect closure: 'closure:of:' of: Re\215ect\) applyT)110.5 348 Q
(o: ')-.8 E(toString' and: 10. #'10')-.18 E F1([Re\215ect] getPr)87
376.8 Q(operty: [p:String] ofObject: [o:Object])-.18 E F0
(returns the property p of object o.)110.5 388.8 Q
(this will produce an error should said property not e)110.5 400.8 Q
(xist.)-.15 E(Re\215ect getProperty: 'end' ofObject: Ev)110.5 424.8 Q
(al)-.25 E F1([Re\215ect] disableInstrumentation)87 453.6 Q F0
(Sends a message to an object with some ar)110.5 465.6 Q
(guments bypassing the instrumentor)-.18 E F1
([Re\215ect] enableInstrumentation)87 494.4 Q F0
(Sends a message to an object with some ar)110.5 506.4 Q
(guments bypassing the instrumentor)-.18 E F1([Re\215ect] r)87 535.2 Q
(egisterInstrumentor: [Block<object, message, ar)-.18 E
(guments>:<object, message, ar)-.1 E(guments>])-.1 E F0(re)110.5 547.2 Q
(gister to an e)-.15 E -.15(ve)-.25 G(nt that \214res e).15 E -.15(ve)
-.25 G(ry time a message is sent.).15 E(This instrumentor will ha)110.5
559.2 Q .3 -.15(ve t)-.2 H 2.5(oh).15 G
(andle all message sending operations)-2.5 E(using `[Re\215ect] disable\
Instrumentation` and '[Re\215ect] enableInstrumentation'.)110.5 571.2 Q
(return v)110.5 583.2 Q(alue is used as the result of the message, unle\
ss it is the instrumentor function,)-.25 E
(In which case, the message is handed do)110.5 595.2 Q
(wn to the object ra)-.25 E(w)-.15 E F1([Re\215ect] curr)87 624 Q
(entInstrumentor)-.18 E F0
(gets the current instrumentor instance, or Nil if none e)110.5 636 Q
(xists)-.15 E F1(@Experimental)87 664.8 Q F0
([Re\215ect] runAtGlobal: [Block] ar)110.5 676.8 Q(guments: [[Object]])
-.18 E(Runs a block at global conte)110.5 700.8 Q(xt passing it the ar)
-.15 E(guments)-.18 E 165.955(0.0.6.6 10)72 768 R(December 2017)2.5 E
(43)185.955 E 0 Cg EP
%%Page: 44 45
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 172.345(man\(1\) CTR)72 48 R(man page)2.5 E
(man\(1\))174.845 E/F1 10.95/Times-Bold@0 SF(Fiber)110.738 96 Q/F2 10
/Times-Bold@0 SF(_OBJ_DEF Fiber)108 108 Q(Fiber new: [Block])87 136.8 Q
F0(Creates a ne)110.5 148.8 Q 2.5(wF)-.25 G
(iber object that does \(Block\) upon control being yielded to it)-2.5 E
(Fiber is a co-processing method in citron.)110.5 172.8 Q(Think softw)
110.5 184.8 Q(are le)-.1 E -.15(ve)-.25 G 2.5(lt).15 G(hreads)-2.5 E F2
([Fiber] yield)87 213.6 Q F0(yield control from the current object)110.5
225.6 Q F2([Fiber] yield: [Object])87 254.4 Q F0
(yield control and pass an object along)108 266.4 Q F2([Fiber] waitF)87
295.2 Q(orAll)-.25 E F0 -.8(Wa)110.5 307.2 S
(it until all \214bers return).8 E F2([Fiber] yielded)87 336 Q F0
(get the object that the last \214ber yielded, or Nil if no object w)
110.5 348 Q(as yielded)-.1 E F1 -.11(BU)72 376.8 S(GS).11 E F0 .661
(This is a preliminary v)108 388.8 R .662
(ersion \(< 1.0\) of Citron, there might still be v)-.15 F .662
(ery serious b)-.15 F 3.162(ugs. Please)-.2 F .662(refrain from)3.162 F
.57(using this v)108 400.8 R .57(ersion in a production en)-.15 F .57
(vironment. This v)-.4 F .57
(ersion of Citron is still considered 'alpha' stage and)-.15 F
(cannot be e)108 412.8 Q(xpected to be reliable.)-.15 E F1 -.548(AU)72
441.6 S(THOR).548 E F0(AnotherT)108 453.6 Q
(est and the Citron Community \(Nil\))-.7 E(de)108 470.4 Q -.25(va)-.25
G(nothertest@gmail.com).25 E 165.955(0.0.6.6 10)72 768 R(December 2017)
2.5 E(44)185.955 E 0 Cg EP
%%Trailer
end
%%EOF
